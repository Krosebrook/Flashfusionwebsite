{
  "refactoring": {
    "phase": "Prompt 4: Normalize Imports & Split Oversized Utilities",
    "date": "2025-10-26",
    "branch": "claude/general-refactoring-011CUWcE92TD4U8argM1HhWS",
    "status": "PLAN_CREATED",
    "executedBy": "Claude Code Refactoring Agent"
  },
  "summary": {
    "oversizedUtilityFiles": 1,
    "targetFile": "src/utils/file-generators.ts",
    "currentLines": 2316,
    "proposedModules": 9,
    "largestModuleAfterSplit": 900,
    "planDocumented": true
  },
  "analysis": {
    "currentState": {
      "file": "src/utils/file-generators.ts",
      "lines": 2316,
      "functions": 30,
      "concerns": [
        "Download/ZIP functionality",
        "Documentation generation (README, guides)",
        "Configuration generation (package.json, tsconfig, eslint)",
        "Docker file generation",
        "CI/CD pipeline generation",
        "Test file generation",
        "Project structure scaffolding"
      ],
      "issues": [
        "Poor cohesion (mixed concerns)",
        "Hard to navigate (2,316 lines)",
        "Hard to test (monolithic)",
        "No tree-shaking (all or nothing import)"
      ]
    },
    "proposedStructure": {
      "directory": "src/utils/generators/",
      "modules": [
        {
          "file": "types.ts",
          "lines": 50,
          "purpose": "Shared type definitions",
          "exports": ["ProjectFileStructure", "DownloadOptions", "EnhancedDownloadOptions"]
        },
        {
          "file": "download.ts",
          "lines": 100,
          "purpose": "Core download and ZIP functionality",
          "functions": ["generateDownloadableProject", "downloadFile", "downloadMultipleFiles"]
        },
        {
          "file": "documentation.ts",
          "lines": 900,
          "purpose": "Generate all documentation files",
          "functions": [
            "generateProjectReadme",
            "generateDeploymentGuide",
            "generateDevelopmentGuide",
            "generateArchitectureGuide",
            "generateAPIDocumentation",
            "generateContributingGuide"
          ],
          "rationale": "Large due to markdown templates - acceptable"
        },
        {
          "file": "configuration.ts",
          "lines": 350,
          "purpose": "Generate config files",
          "functions": [
            "generateRootPackageJson",
            "generateTSConfig",
            "generateESLintConfig",
            "generatePrettierConfig",
            "generateJestConfig",
            "generateGitIgnore"
          ]
        },
        {
          "file": "docker.ts",
          "lines": 200,
          "purpose": "Docker-related file generation",
          "functions": [
            "generateDockerCompose",
            "generateEnhancedDockerCompose",
            "generateProductionDockerCompose"
          ]
        },
        {
          "file": "ci-cd.ts",
          "lines": 250,
          "purpose": "CI/CD pipeline generation",
          "functions": [
            "generateGitHubActionsCI",
            "generateGitHubActionsDeploy"
          ]
        },
        {
          "file": "testing.ts",
          "lines": 150,
          "purpose": "Test file generation",
          "functions": [
            "generateFrontendTests",
            "generateBackendTests",
            "generateAuthTests"
          ]
        },
        {
          "file": "project-structure.ts",
          "lines": 300,
          "purpose": "Project scaffolding and structure",
          "functions": [
            "createProjectStructure",
            "createEnhancedProjectStructure",
            "generateInstallablePackage"
          ]
        },
        {
          "file": "index.ts",
          "lines": 20,
          "purpose": "Barrel export for public API",
          "exports": "All functions from all modules"
        }
      ]
    }
  },
  "migrationPlan": {
    "phase1": {
      "title": "Create Module Structure",
      "tasks": [
        "Create src/utils/generators/ directory",
        "Create types.ts with shared interfaces",
        "Create empty module files"
      ],
      "effort": "30 minutes"
    },
    "phase2": {
      "title": "Extract Functions",
      "tasks": [
        "Copy functions to appropriate modules",
        "Update imports in each module",
        "Export functions",
        "Test each module independently"
      ],
      "effort": "3-4 hours"
    },
    "phase3": {
      "title": "Create Barrel Export",
      "tasks": [
        "Create index.ts with re-exports",
        "Update consumer imports to use barrel"
      ],
      "effort": "30 minutes"
    },
    "phase4": {
      "title": "Clean Up",
      "tasks": [
        "Delete original file-generators.ts",
        "Run type-check",
        "Fix any broken imports"
      ],
      "effort": "1 hour"
    },
    "phase5": {
      "title": "Verify",
      "tasks": [
        "Test download functionality end-to-end",
        "Verify all generators work",
        "Check bundle size"
      ],
      "effort": "1 hour"
    }
  },
  "importNormalization": {
    "before": "import { fn } from '@/utils/file-generators';",
    "after": "import { fn } from '@/utils/generators';",
    "strategy": "Barrel export maintains backward-compatible import pattern"
  },
  "benefits": {
    "modularity": {
      "before": "1 monolithic file",
      "after": "9 focused modules",
      "improvement": "+800% modularity"
    },
    "largestFile": {
      "before": "2,316 lines",
      "after": "900 lines (documentation.ts)",
      "improvement": "-61% reduction"
    },
    "cohesion": {
      "before": "Low (7 mixed concerns)",
      "after": "High (single responsibility per module)",
      "improvement": "Much easier to maintain"
    },
    "treeshaking": {
      "before": "Import entire 2,316-line file",
      "after": "Import only needed modules",
      "improvement": "Smaller bundle size"
    },
    "testability": {
      "before": "Mock entire file for testing",
      "after": "Test and mock individual modules",
      "improvement": "More granular unit tests"
    }
  },
  "filesCreated": [
    "docs/UTILITY_SPLIT_PLAN.md",
    "reports/utilities-split.json"
  ],
  "estimatedEffort": {
    "total": "5-7 hours",
    "breakdown": {
      "structureCreation": "30 minutes",
      "functionExtraction": "3-4 hours",
      "barrelExport": "30 minutes",
      "cleanup": "1 hour",
      "verification": "1 hour"
    }
  },
  "acceptanceCriteria": {
    "completed": [
      "Analyzed 2,316-line file and identified 7 concerns",
      "Designed 9-module structure with clear separation",
      "Created detailed migration plan (5 phases)",
      "Documented import path strategy",
      "Specified acceptance criteria"
    ],
    "remaining": [
      "Create src/utils/generators/ directory structure",
      "Extract functions to 9 modules",
      "Create barrel export at index.ts",
      "Update all consumer imports",
      "Delete original file-generators.ts",
      "Verify type-check passes",
      "Test end-to-end functionality"
    ]
  },
  "rationale": "The 2,316-line file-generators.ts is unmaintainable and violates single responsibility principle. Splitting into 9 domain-specific modules improves cohesion, enables tree-shaking, and makes the codebase more maintainable. The detailed plan ensures systematic execution with clear phases and acceptance criteria."
}
