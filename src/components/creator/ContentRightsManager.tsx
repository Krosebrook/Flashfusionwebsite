import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'motion/react';
import { Card } from '../ui/card';
import { Button } from '../ui/button';
import { Badge } from '../ui/badge';
import { Input } from '../ui/input';
import { Textarea } from '../ui/textarea';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';
import { Switch } from '../ui/switch';
import { Separator } from '../ui/separator';
import { 
  Shield,
  FileText,
  Download,
  Eye,
  AlertTriangle,
  CheckCircle2,
  Clock,
  Users,
  DollarSign,
  Globe,
  Building,
  Camera,
  Video,
  Music,
  Image,
  Mic,
  Hash,
  Star,
  Copy,
  ExternalLink,
  RefreshCw,
  Plus,
  Trash2,
  Edit3,
  Legal
} from 'lucide-react';

interface ContentItem {
  id: string;
  title: string;
  type: 'video' | 'image' | 'audio' | 'text' | 'livestream';
  createdAt: Date;
  platforms: string[];
  licenseType: 'exclusive' | 'non-exclusive' | 'royalty-free' | 'custom';
  usageRights: {
    commercial: boolean;
    modification: boolean;
    redistribution: boolean;
    attribution: boolean;
    exclusivity: boolean;
    duration: 'perpetual' | '1-year' | '6-months' | '1-month' | 'custom';
    territory: 'worldwide' | 'us' | 'europe' | 'custom';
  };
  brandPartner?: {
    name: string;
    requirements: string[];
    compensation: number;
    currency: string;
  };
  ftcCompliance: {
    requiresDisclosure: boolean;
    disclosureType: 'sponsored' | 'partnership' | 'gifted' | 'affiliate' | 'none';
    autoGenerated: boolean;
    customText?: string;
  };
  status: 'draft' | 'active' | 'expired' | 'violated';
  earnings: number;
  views: number;
}

interface LicenseTemplate {
  id: string;
  name: string;
  description: string;
  category: 'standard' | 'premium' | 'enterprise';
  usageRights: ContentItem['usageRights'];
  price: number;
  popular?: boolean;
}

const CONTENT_TYPES = [
  { value: 'video', label: 'Video Content', icon: Video, color: '#E91E63' },
  { value: 'image', label: 'Photos/Graphics', icon: Image, color: '#10B981' },
  { value: 'audio', label: 'Audio/Podcast', icon: Music, color: '#00B4D8' },
  { value: 'text', label: 'Written Content', icon: FileText, color: '#FF7B00' },
  { value: 'livestream', label: 'Live Streams', icon: Camera, color: '#764BA2' }
];

const LICENSE_TEMPLATES: LicenseTemplate[] = [
  {
    id: 'basic',
    name: 'Basic Creator License',
    description: 'Standard license for personal brand content',
    category: 'standard',
    price: 0,
    popular: true,
    usageRights: {
      commercial: true,
      modification: false,
      redistribution: false,
      attribution: true,
      exclusivity: false,
      duration: '1-year',
      territory: 'worldwide'
    }
  },
  {
    id: 'brand-partnership',
    name: 'Brand Partnership License',
    description: 'Comprehensive license for brand collaborations',
    category: 'premium',
    price: 99,
    usageRights: {
      commercial: true,
      modification: true,
      redistribution: true,
      attribution: false,
      exclusivity: false,
      duration: '1-year',
      territory: 'worldwide'
    }
  },
  {
    id: 'exclusive-enterprise',
    name: 'Exclusive Enterprise License',
    description: 'Full exclusivity for enterprise partnerships',
    category: 'enterprise',
    price: 499,
    usageRights: {
      commercial: true,
      modification: true,
      redistribution: true,
      attribution: false,
      exclusivity: true,
      duration: 'perpetual',
      territory: 'worldwide'
    }
  }
];

const FTC_DISCLOSURE_TEMPLATES = {
  sponsored: '#ad #sponsored #paidpartnership',
  partnership: '#partnership #brandpartner #collab',
  gifted: '#gifted #pr #notsponsored',
  affiliate: '#affiliate #commission #link',
  none: ''
};

export function ContentRightsManager() {
  const [contentItems, setContentItems] = useState<ContentItem[]>([]);
  const [selectedItem, setSelectedItem] = useState<ContentItem | null>(null);
  const [isCreating, setIsCreating] = useState(false);
  const [activeTab, setActiveTab] = useState<'content' | 'templates' | 'compliance' | 'analytics'>('content');

  // Sample data
  useEffect(() => {
    const sampleContent: ContentItem[] = [
      {
        id: '1',
        title: 'Skincare Morning Routine - TikTok',
        type: 'video',
        createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
        platforms: ['TikTok', 'Instagram', 'YouTube'],
        licenseType: 'non-exclusive',
        usageRights: {
          commercial: true,
          modification: false,
          redistribution: true,
          attribution: true,
          exclusivity: false,
          duration: '1-year',
          territory: 'worldwide'
        },
        brandPartner: {
          name: 'GlowUp Skincare',
          requirements: ['Show product prominently', 'Mention key benefits', 'Include discount code'],
          compensation: 2500,
          currency: 'USD'
        },
        ftcCompliance: {
          requiresDisclosure: true,
          disclosureType: 'sponsored',
          autoGenerated: true
        },
        status: 'active',
        earnings: 2500,
        views: 185000
      },
      {
        id: '2',
        title: 'Home Office Setup Guide',
        type: 'video',
        createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
        platforms: ['YouTube', 'Instagram'],
        licenseType: 'exclusive',
        usageRights: {
          commercial: true,
          modification: true,
          redistribution: true,
          attribution: false,
          exclusivity: true,
          duration: '6-months',
          territory: 'us'
        },
        brandPartner: {
          name: 'ModernDesk Co.',
          requirements: ['Feature desk prominently', 'Show setup process', 'Include specs'],
          compensation: 5000,
          currency: 'USD'
        },
        ftcCompliance: {
          requiresDisclosure: true,
          disclosureType: 'partnership',
          autoGenerated: true
        },
        status: 'active',
        earnings: 5000,
        views: 45000
      }
    ];
    setContentItems(sampleContent);
  }, []);

  const totalEarnings = contentItems.reduce((sum, item) => sum + item.earnings, 0);
  const totalViews = contentItems.reduce((sum, item) => sum + item.views, 0);
  const activeContent = contentItems.filter(item => item.status === 'active').length;

  const ContentItemCard = ({ item }: { item: ContentItem }) => {
    const typeConfig = CONTENT_TYPES.find(t => t.value === item.type);
    const TypeIcon = typeConfig?.icon || FileText;

    return (
      <motion.div
        layout
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        whileHover={{ scale: 1.02 }}
        transition={{ duration: 0.2 }}
      >
        <Card 
          className="cursor-pointer transition-all duration-300 hover:shadow-lg"
          style={{
            background: 'rgba(255, 255, 255, 0.95)',
            backdropFilter: 'blur(10px)',
            border: selectedItem?.id === item.id 
              ? `2px solid ${typeConfig?.color || '#FF7B00'}` 
              : '1px solid rgba(255, 255, 255, 0.2)'
          }}
          onClick={() => setSelectedItem(selectedItem?.id === item.id ? null : item)}
        >
          <div className="p-6">
            {/* Header */}
            <div className="flex items-start justify-between mb-4">
              <div className="flex items-center space-x-3">
                <div 
                  className="w-10 h-10 rounded-lg flex items-center justify-center"
                  style={{ backgroundColor: `${typeConfig?.color}15` }}
                >
                  <TypeIcon className="h-5 w-5" style={{ color: typeConfig?.color }} />
                </div>
                <div>
                  <h3 className="font-semibold text-gray-900 line-clamp-1">{item.title}</h3>
                  <div className="flex items-center space-x-2 mt-1">
                    <Badge 
                      className="text-xs"
                      style={{
                        backgroundColor: item.status === 'active' ? '#10B98115' : '#F59E0B15',
                        color: item.status === 'active' ? '#10B981' : '#F59E0B',
                        border: `1px solid ${item.status === 'active' ? '#10B98130' : '#F59E0B30'}`
                      }}
                    >
                      {item.status}
                    </Badge>
                    <span className="text-xs text-gray-500">
                      {new Date(item.createdAt).toLocaleDateString()}
                    </span>
                  </div>
                </div>
              </div>

              <div className="text-right">
                <div className="text-lg font-bold text-gray-900">
                  ${item.earnings.toLocaleString()}
                </div>
                <div className="text-xs text-gray-500">
                  {item.views.toLocaleString()} views
                </div>
              </div>
            </div>

            {/* License & Brand Info */}
            <div className="space-y-3 mb-4">
              <div className="flex items-center justify-between">
                <span className="text-sm text-gray-600">License Type:</span>
                <Badge variant="outline" className="capitalize">
                  {item.licenseType.replace('-', ' ')}
                </Badge>
              </div>

              {item.brandPartner && (
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">Brand Partner:</span>
                  <div className="flex items-center space-x-2">
                    <Building className="h-4 w-4 text-blue-500" />
                    <span className="text-sm font-medium">{item.brandPartner.name}</span>
                  </div>
                </div>
              )}

              {item.ftcCompliance.requiresDisclosure && (
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-600">FTC Disclosure:</span>
                  <div className="flex items-center space-x-2">
                    <Shield className="h-4 w-4 text-green-500" />
                    <span className="text-sm font-medium capitalize">
                      {item.ftcCompliance.disclosureType}
                    </span>
                  </div>
                </div>
              )}
            </div>

            {/* Platforms */}
            <div className="flex items-center space-x-2 mb-4">
              <span className="text-sm text-gray-600">Platforms:</span>
              <div className="flex space-x-1">
                {item.platforms.map((platform) => (
                  <Badge key={platform} variant="outline" className="text-xs">
                    {platform}
                  </Badge>
                ))}
              </div>
            </div>

            {/* Usage Rights Summary */}
            <div className="grid grid-cols-3 gap-4 text-center border-t pt-4">
              <div>
                <div className="text-xs text-gray-500">Commercial</div>
                <div className="flex justify-center mt-1">
                  {item.usageRights.commercial ? (
                    <CheckCircle2 className="h-4 w-4 text-green-500" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-red-500" />
                  )}
                </div>
              </div>
              <div>
                <div className="text-xs text-gray-500">Modification</div>
                <div className="flex justify-center mt-1">
                  {item.usageRights.modification ? (
                    <CheckCircle2 className="h-4 w-4 text-green-500" />
                  ) : (
                    <AlertTriangle className="h-4 w-4 text-red-500" />
                  )}
                </div>
              </div>
              <div>
                <div className="text-xs text-gray-500">Exclusivity</div>
                <div className="flex justify-center mt-1">
                  {item.usageRights.exclusivity ? (
                    <Star className="h-4 w-4 text-yellow-500" />
                  ) : (
                    <Users className="h-4 w-4 text-gray-400" />
                  )}
                </div>
              </div>
            </div>

            {/* Expanded Details */}
            <AnimatePresence>
              {selectedItem?.id === item.id && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  transition={{ duration: 0.3 }}
                  className="mt-4 pt-4 border-t space-y-4"
                >
                  {/* Detailed Usage Rights */}
                  <div>
                    <h4 className="font-medium text-gray-900 mb-2">Usage Rights Details</h4>
                    <div className="grid grid-cols-2 gap-3 text-sm">
                      <div className="flex justify-between">
                        <span>Duration:</span>
                        <span className="font-medium capitalize">{item.usageRights.duration}</span>
                      </div>
                      <div className="flex justify-between">
                        <span>Territory:</span>
                        <span className="font-medium capitalize">{item.usageRights.territory}</span>
                      </div>
                      <div className="flex justify-between">
                        <span>Attribution:</span>
                        <span className="font-medium">
                          {item.usageRights.attribution ? 'Required' : 'Not Required'}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span>Redistribution:</span>
                        <span className="font-medium">
                          {item.usageRights.redistribution ? 'Allowed' : 'Restricted'}
                        </span>
                      </div>
                    </div>
                  </div>

                  {/* Brand Partner Details */}
                  {item.brandPartner && (
                    <div>
                      <h4 className="font-medium text-gray-900 mb-2">Partnership Requirements</h4>
                      <ul className="list-disc list-inside space-y-1 text-sm text-gray-600">
                        {item.brandPartner.requirements.map((req, index) => (
                          <li key={index}>{req}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {/* FTC Compliance */}
                  {item.ftcCompliance.requiresDisclosure && (
                    <div>
                      <h4 className="font-medium text-gray-900 mb-2">FTC Disclosure</h4>
                      <div className="bg-blue-50 p-3 rounded-lg">
                        <div className="flex items-center space-x-2 mb-2">
                          <Shield className="h-4 w-4 text-blue-500" />
                          <span className="text-sm font-medium text-blue-700">Auto-Generated Disclosure</span>
                        </div>
                        <code className="text-sm bg-white px-2 py-1 rounded border">
                          {FTC_DISCLOSURE_TEMPLATES[item.ftcCompliance.disclosureType]}
                        </code>
                      </div>
                    </div>
                  )}

                  {/* Actions */}
                  <div className="flex space-x-2 pt-2">
                    <Button size="sm" variant="outline">
                      <Edit3 className="h-4 w-4 mr-2" />
                      Edit License
                    </Button>
                    <Button size="sm" variant="outline">
                      <Download className="h-4 w-4 mr-2" />
                      Download Contract
                    </Button>
                    <Button size="sm" variant="outline">
                      <Copy className="h-4 w-4 mr-2" />
                      Copy Disclosure
                    </Button>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </Card>
      </motion.div>
    );
  };

  const LicenseTemplateCard = ({ template }: { template: LicenseTemplate }) => (
    <Card className="relative overflow-hidden hover:shadow-lg transition-shadow">
      {template.popular && (
        <div className="absolute top-4 right-4">
          <Badge className="bg-ff-primary text-white">Most Popular</Badge>
        </div>
      )}
      
      <div className="p-6">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h3 className="text-lg font-semibold text-gray-900">{template.name}</h3>
            <p className="text-sm text-gray-600 mt-1">{template.description}</p>
          </div>
          <div className="text-right">
            <div className="text-2xl font-bold text-gray-900">
              {template.price === 0 ? 'Free' : `$${template.price}`}
            </div>
            <Badge 
              className="mt-1 capitalize"
              style={{
                backgroundColor: template.category === 'enterprise' ? '#E91E63' : 
                               template.category === 'premium' ? '#FF7B00' : '#10B981',
                color: 'white'
              }}
            >
              {template.category}
            </Badge>
          </div>
        </div>

        <div className="space-y-3">
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div className="flex items-center space-x-2">
              {template.usageRights.commercial ? (
                <CheckCircle2 className="h-4 w-4 text-green-500" />
              ) : (
                <AlertTriangle className="h-4 w-4 text-red-500" />
              )}
              <span>Commercial Use</span>
            </div>
            <div className="flex items-center space-x-2">
              {template.usageRights.modification ? (
                <CheckCircle2 className="h-4 w-4 text-green-500" />
              ) : (
                <AlertTriangle className="h-4 w-4 text-red-500" />
              )}
              <span>Modifications</span>
            </div>
            <div className="flex items-center space-x-2">
              {template.usageRights.redistribution ? (
                <CheckCircle2 className="h-4 w-4 text-green-500" />
              ) : (
                <AlertTriangle className="h-4 w-4 text-red-500" />
              )}
              <span>Redistribution</span>
            </div>
            <div className="flex items-center space-x-2">
              {template.usageRights.exclusivity ? (
                <Star className="h-4 w-4 text-yellow-500" />
              ) : (
                <Users className="h-4 w-4 text-gray-400" />
              )}
              <span>Exclusivity</span>
            </div>
          </div>

          <Separator />

          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <span className="text-gray-600">Duration:</span>
              <span className="ml-2 font-medium capitalize">{template.usageRights.duration}</span>
            </div>
            <div>
              <span className="text-gray-600">Territory:</span>
              <span className="ml-2 font-medium capitalize">{template.usageRights.territory}</span>
            </div>
          </div>
        </div>

        <div className="flex space-x-2 mt-6">
          <Button className="flex-1" size="sm">
            Use Template
          </Button>
          <Button variant="outline" size="sm">
            <Eye className="h-4 w-4" />
          </Button>
          <Button variant="outline" size="sm">
            <Copy className="h-4 w-4" />
          </Button>
        </div>
      </div>
    </Card>
  );

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent">
            Content Rights Manager
          </h1>
          <p className="text-muted-foreground mt-2">
            Manage content licensing, FTC compliance, and usage rights with confidence
          </p>
        </div>

        <Button 
          className="ff-btn-primary"
          onClick={() => setIsCreating(true)}
        >
          <Plus className="h-4 w-4 mr-2" />
          Add Content
        </Button>
      </div>

      {/* Stats Overview */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <Card className="p-6 text-center">
          <div className="text-2xl font-bold text-green-600">${totalEarnings.toLocaleString()}</div>
          <div className="text-sm text-gray-600">Total Earnings</div>
        </Card>
        <Card className="p-6 text-center">
          <div className="text-2xl font-bold text-blue-600">{totalViews.toLocaleString()}</div>
          <div className="text-sm text-gray-600">Total Views</div>
        </Card>
        <Card className="p-6 text-center">
          <div className="text-2xl font-bold text-orange-600">{activeContent}</div>
          <div className="text-sm text-gray-600">Active Licenses</div>
        </Card>
        <Card className="p-6 text-center">
          <div className="text-2xl font-bold text-purple-600">100%</div>
          <div className="text-sm text-gray-600">FTC Compliant</div>
        </Card>
      </div>

      {/* Main Content */}
      <Tabs value={activeTab} onValueChange={(v) => setActiveTab(v as any)}>
        <TabsList className="grid w-full grid-cols-4">
          <TabsTrigger value="content">Content Library</TabsTrigger>
          <TabsTrigger value="templates">License Templates</TabsTrigger>
          <TabsTrigger value="compliance">FTC Compliance</TabsTrigger>
          <TabsTrigger value="analytics">Rights Analytics</TabsTrigger>
        </TabsList>

        <TabsContent value="content" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            {contentItems.map((item) => (
              <ContentItemCard key={item.id} item={item} />
            ))}
          </div>
        </TabsContent>

        <TabsContent value="templates" className="space-y-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
            {LICENSE_TEMPLATES.map((template) => (
              <LicenseTemplateCard key={template.id} template={template} />
            ))}
          </div>
        </TabsContent>

        <TabsContent value="compliance" className="space-y-6">
          <Card className="p-6">
            <h3 className="text-lg font-semibold mb-4">FTC Compliance Dashboard</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-4">
                <h4 className="font-medium">Disclosure Requirements</h4>
                <div className="space-y-3">
                  {Object.entries(FTC_DISCLOSURE_TEMPLATES).map(([type, template]) => (
                    <div key={type} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div>
                        <div className="font-medium capitalize">{type}</div>
                        <code className="text-xs text-gray-600">{template || 'No disclosure required'}</code>
                      </div>
                      <Button size="sm" variant="outline">
                        <Copy className="h-4 w-4" />
                      </Button>
                    </div>
                  ))}
                </div>
              </div>
              <div className="space-y-4">
                <h4 className="font-medium">Compliance Status</h4>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <span>Content with Required Disclosures</span>
                    <Badge className="bg-green-100 text-green-700">100%</Badge>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>Auto-Generated Disclosures</span>
                    <Badge className="bg-blue-100 text-blue-700">85%</Badge>
                  </div>
                  <div className="flex items-center justify-between">
                    <span>Platform Compliance Check</span>
                    <Badge className="bg-green-100 text-green-700">✓ Passed</Badge>
                  </div>
                </div>
              </div>
            </div>
          </Card>
        </TabsContent>

        <TabsContent value="analytics" className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <Card className="p-6">
              <h3 className="text-lg font-semibold mb-4">Revenue by License Type</h3>
              <div className="space-y-3">
                <div className="flex items-center justify-between">
                  <span>Exclusive Licenses</span>
                  <span className="font-semibold">$5,000 (67%)</span>
                </div>
                <div className="flex items-center justify-between">
                  <span>Non-Exclusive Licenses</span>
                  <span className="font-semibold">$2,500 (33%)</span>
                </div>
              </div>
            </Card>
            <Card className="p-6">
              <h3 className="text-lg font-semibold mb-4">Top Performing Content</h3>
              <div className="space-y-3">
                {contentItems.slice(0, 3).map((item) => (
                  <div key={item.id} className="flex items-center justify-between">
                    <span className="line-clamp-1">{item.title}</span>
                    <span className="font-semibold">${item.earnings}</span>
                  </div>
                ))}
              </div>
            </Card>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
}