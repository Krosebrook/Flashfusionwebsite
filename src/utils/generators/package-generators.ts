/**
 * Package.json generation utilities
 */

import type { GeneratedApp, EnhancedDownloadOptions } from './types';

/**
 * Generate root package.json for the entire project
 */
export function generateRootPackageJson(app: GeneratedApp): string {
  return JSON.stringify(
    {
      name: app.name.toLowerCase().replace(/\s+/g, '-'),
      version: '1.0.0',
      description: app.description,
      private: true,
      workspaces: ['frontend', 'backend'],
      scripts: {
        dev: 'concurrently "npm run dev:backend" "npm run dev:frontend"',
        'dev:frontend': 'cd frontend && npm run dev',
        'dev:backend': 'cd backend && npm run dev',
        build: 'npm run build:backend && npm run build:frontend',
        'build:frontend': 'cd frontend && npm run build',
        'build:backend': 'cd backend && npm run build',
        start: 'npm run start:backend',
        'start:backend': 'cd backend && npm start',
        test: 'npm run test:frontend && npm run test:backend',
        'test:frontend': 'cd frontend && npm test',
        'test:backend': 'cd backend && npm test',
        lint: 'npm run lint:frontend && npm run lint:backend',
        'lint:frontend': 'cd frontend && npm run lint',
        'lint:backend': 'cd backend && npm run lint',
        'docker:dev': 'docker-compose up -d',
        'docker:prod': 'docker-compose -f docker-compose.prod.yml up -d',
        'docker:down': 'docker-compose down',
        setup: 'npm install && cd frontend && npm install && cd ../backend && npm install',
      },
      devDependencies: {
        concurrently: '^8.2.0',
        '@types/node': '^20.0.0',
        typescript: '^5.0.0',
      },
      engines: {
        node: '>=18.0.0',
        npm: '>=8.0.0',
      },
      repository: {
        type: 'git',
        url: `https://github.com/username/${app.name.toLowerCase().replace(/\s+/g, '-')}.git`,
      },
      keywords: ['fullstack', 'react', 'nodejs', 'typescript', 'generated-by-flashfusion'],
      author: 'Generated by FlashFusion',
      license: 'MIT',
    },
    null,
    2
  );
}

/**
 * Generate package.json for npm install
 */
export function generateInstallablePackage(app: GeneratedApp): string {
  return JSON.stringify(
    {
      name: `@flashfusion/${app.name.toLowerCase().replace(/\s+/g, '-')}`,
      version: '1.0.0',
      description: app.description,
      main: 'index.js',
      scripts: {
        postinstall: 'node setup.js',
      },
      keywords: ['flashfusion', 'generated', 'fullstack'],
      author: 'FlashFusion',
      license: 'MIT',
      files: [
        'frontend/**/*',
        'backend/**/*',
        'database/**/*',
        'docker-compose.yml',
        'setup.js',
        'README.md',
      ],
    },
    null,
    2
  );
}

/**
 * Generate enhanced root package.json with additional features
 */
export function generateEnhancedRootPackageJson(
  app: GeneratedApp,
  options: EnhancedDownloadOptions
): string {
  const branding = options.customBranding;

  return JSON.stringify(
    {
      name: app.name.toLowerCase().replace(/\s+/g, '-'),
      version: '1.0.0',
      description: app.description,
      private: true,
      author: branding?.companyName || 'Generated by FlashFusion',
      homepage: branding?.website || 'https://flashfusion.dev',
      repository: {
        type: 'git',
        url: `https://github.com/username/${app.name.toLowerCase().replace(/\s+/g, '-')}.git`,
      },
      workspaces: ['frontend', 'backend'],
      scripts: {
        setup: 'npm install && cd frontend && npm install && cd ../backend && npm install',
        dev: 'concurrently "npm run dev:backend" "npm run dev:frontend"',
        'dev:frontend': 'cd frontend && npm run dev',
        'dev:backend': 'cd backend && npm run dev',
        build: 'npm run build:backend && npm run build:frontend',
        'build:frontend': 'cd frontend && npm run build',
        'build:backend': 'cd backend && npm run build',
        start: 'npm run start:backend',
        'start:frontend': 'cd frontend && npm start',
        'start:backend': 'cd backend && npm start',
        test: 'npm run test:frontend && npm run test:backend',
        'test:frontend': 'cd frontend && npm test',
        'test:backend': 'cd backend && npm test',
        'test:e2e': 'cypress run',
        'test:coverage': 'npm run test -- --coverage',
        lint: 'npm run lint:frontend && npm run lint:backend',
        'lint:frontend': 'cd frontend && npm run lint',
        'lint:backend': 'cd backend && npm run lint',
        'lint:fix': 'npm run lint:frontend -- --fix && npm run lint:backend -- --fix',
        format: 'prettier --write "**/*.{js,jsx,ts,tsx,json,css,md}"',
        'type-check': 'npm run type-check:frontend && npm run type-check:backend',
        'type-check:frontend': 'cd frontend && tsc --noEmit',
        'type-check:backend': 'cd backend && tsc --noEmit',
        'docker:dev': 'docker-compose up -d',
        'docker:prod': 'docker-compose -f docker-compose.prod.yml up -d',
        'docker:build': 'docker-compose build',
        'docker:down': 'docker-compose down',
        'db:migrate': 'cd backend && npm run db:migrate',
        'db:seed': 'cd backend && npm run db:seed',
        'db:reset': 'cd backend && npm run db:reset',
        deploy: 'npm run build && npm run deploy:production',
        'deploy:staging': 'echo "Deploy to staging"',
        'deploy:production': 'echo "Deploy to production"',
      },
      devDependencies: {
        concurrently: '^8.2.0',
        '@types/node': '^20.0.0',
        typescript: '^5.0.0',
        prettier: '^3.0.0',
        eslint: '^8.0.0',
        husky: '^8.0.0',
        'lint-staged': '^13.0.0',
      },
      engines: {
        node: '>=18.0.0',
        npm: '>=8.0.0',
      },
      keywords: [
        'fullstack',
        'react',
        'nodejs',
        'typescript',
        app.stack.frontend,
        app.stack.backend,
        app.stack.database,
        'generated-by-flashfusion',
      ],
      license: 'MIT',
    },
    null,
    2
  );
}
