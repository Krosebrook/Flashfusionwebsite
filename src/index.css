/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-300: oklch(.808 .114 19.571);
    --color-red-400: oklch(.704 .191 22.216);
    --color-red-500: oklch(.637 .237 25.331);
    --color-red-900: oklch(.396 .141 25.723);
    --color-orange-400: oklch(.75 .183 55.934);
    --color-orange-500: oklch(.705 .213 47.604);
    --color-orange-600: oklch(.646 .222 41.116);
    --color-yellow-400: oklch(.852 .199 91.936);
    --color-yellow-500: oklch(.795 .184 86.047);
    --color-yellow-600: oklch(.681 .162 75.834);
    --color-green-400: oklch(.792 .209 151.711);
    --color-green-500: oklch(.723 .219 149.579);
    --color-green-600: oklch(.627 .194 149.214);
    --color-emerald-300: oklch(.845 .143 164.978);
    --color-emerald-400: oklch(.765 .177 163.223);
    --color-emerald-500: oklch(.696 .17 162.48);
    --color-teal-500: oklch(.704 .14 182.503);
    --color-teal-600: oklch(.6 .118 184.704);
    --color-cyan-400: oklch(.789 .154 211.53);
    --color-cyan-500: oklch(.715 .143 215.221);
    --color-blue-300: oklch(.809 .105 251.813);
    --color-blue-400: oklch(.707 .165 254.624);
    --color-blue-500: oklch(.623 .214 259.815);
    --color-blue-600: oklch(.546 .245 262.881);
    --color-indigo-500: oklch(.585 .233 277.117);
    --color-indigo-600: oklch(.511 .262 276.966);
    --color-purple-300: oklch(.827 .119 306.383);
    --color-purple-400: oklch(.714 .203 305.504);
    --color-purple-500: oklch(.627 .265 303.9);
    --color-purple-600: oklch(.558 .288 302.321);
    --color-pink-500: oklch(.656 .241 354.308);
    --color-gray-100: oklch(.967 .003 264.542);
    --color-gray-200: oklch(.928 .006 264.531);
    --color-gray-300: oklch(.872 .01 258.338);
    --color-gray-400: oklch(.707 .022 261.325);
    --color-gray-500: oklch(.551 .027 264.364);
    --color-gray-600: oklch(.446 .03 256.802);
    --color-gray-700: oklch(.373 .034 259.733);
    --color-gray-800: oklch(.278 .033 256.848);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --tracking-tight: -.025em;
    --tracking-wide: .025em;
    --tracking-widest: .1em;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --radius-xs: .125rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-sm: 8px;
    --blur-lg: 16px;
    --blur-3xl: 64px;
    --aspect-video: 16 / 9;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
    font-family: var(--ff-font-secondary);
    line-height: var(--ff-leading-relaxed);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-5xl);
    font-weight: var(--ff-weight-bold);
    line-height: var(--ff-leading-tight);
    background: var(--ff-gradient-hero);
    -webkit-text-fill-color: transparent;
    margin-bottom: var(--ff-space-layout-md);
    background-clip: text;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-3xl);
    font-weight: var(--ff-weight-semibold);
    line-height: var(--ff-leading-snug);
    color: var(--ff-text-primary);
    margin-bottom: var(--ff-space-layout-md);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-xl);
    font-weight: var(--ff-weight-semibold);
    line-height: var(--ff-leading-relaxed);
    color: var(--ff-text-primary);
    margin-bottom: var(--ff-space-component-sm);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-lg);
    font-weight: var(--ff-weight-semibold);
    line-height: var(--ff-leading-relaxed);
    color: var(--ff-text-primary);
    margin-bottom: var(--ff-space-component-sm);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--ff-text-base);
    font-weight: var(--ff-weight-normal);
    line-height: var(--ff-leading-relaxed);
    color: var(--ff-text-secondary);
    margin-bottom: var(--ff-space-component-sm);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-sm);
    font-weight: var(--ff-weight-semibold);
    line-height: var(--ff-leading-normal);
    color: var(--ff-text-primary);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-family: var(--ff-font-primary);
    font-size: var(--ff-text-sm);
    font-weight: var(--ff-weight-semibold);
    line-height: var(--ff-leading-relaxed);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) textarea, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) select {
    font-size: var(--ff-text-sm);
    font-weight: var(--ff-weight-normal);
    line-height: var(--ff-leading-relaxed);
    color: var(--ff-text-primary);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) code {
    font-family: var(--ff-font-mono);
    font-size: var(--ff-text-sm);
    font-weight: var(--ff-weight-normal);
    line-height: var(--ff-leading-snug);
    background: var(--ff-surface);
    border-radius: var(--ff-radius-sm);
    padding: .125rem .25rem;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-4 {
    inset: calc(var(--spacing) * 4);
  }

  .-top-2 {
    top: calc(var(--spacing) * -2);
  }

  .-top-3 {
    top: calc(var(--spacing) * -3);
  }

  .-top-6 {
    top: calc(var(--spacing) * -6);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-1\/4 {
    top: 25%;
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-6 {
    top: calc(var(--spacing) * 6);
  }

  .top-\[50\%\] {
    top: 50%;
  }

  .-right-1 {
    right: calc(var(--spacing) * -1);
  }

  .-right-2 {
    right: calc(var(--spacing) * -2);
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-1\/4 {
    right: 25%;
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-3 {
    right: calc(var(--spacing) * 3);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .-bottom-1 {
    bottom: calc(var(--spacing) * -1);
  }

  .-bottom-4 {
    bottom: calc(var(--spacing) * -4);
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-1\/4 {
    bottom: 25%;
  }

  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }

  .-left-1 {
    left: calc(var(--spacing) * -1);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-1\/4 {
    left: 25%;
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .left-3 {
    left: calc(var(--spacing) * 3);
  }

  .left-4 {
    left: calc(var(--spacing) * 4);
  }

  .left-\[50\%\] {
    left: 50%;
  }

  .z-0 {
    z-index: 0;
  }

  .z-1 {
    z-index: 1;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-30 {
    z-index: 30;
  }

  .z-50 {
    z-index: 50;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }

  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .mt-0\.5 {
    margin-top: calc(var(--spacing) * .5);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }

  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }

  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }

  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }

  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }

  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }

  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }

  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }

  .ml-auto {
    margin-left: auto;
  }

  .line-clamp-1 {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .line-clamp-3 {
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  .block {
    display: block;
  }

  .contents {
    display: contents;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .field-sizing-content {
    field-sizing: content;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .aspect-video {
    aspect-ratio: var(--aspect-video);
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-10 {
    width: calc(var(--spacing) * 10);
    height: calc(var(--spacing) * 10);
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-1 {
    height: calc(var(--spacing) * 1);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }

  .h-3 {
    height: calc(var(--spacing) * 3);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-20 {
    height: calc(var(--spacing) * 20);
  }

  .h-32 {
    height: calc(var(--spacing) * 32);
  }

  .h-48 {
    height: calc(var(--spacing) * 48);
  }

  .h-64 {
    height: calc(var(--spacing) * 64);
  }

  .h-80 {
    height: calc(var(--spacing) * 80);
  }

  .h-96 {
    height: calc(var(--spacing) * 96);
  }

  .h-128 {
    height: calc(var(--spacing) * 128);
  }

  .h-\[1\.15rem\] {
    height: 1.15rem;
  }

  .h-\[1px\] {
    height: 1px;
  }

  .h-\[var\(--radix-select-trigger-height\)\] {
    height: var(--radix-select-trigger-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-px {
    height: 1px;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {
    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-\(--radix-select-content-available-height\) {
    max-height: var(--radix-select-content-available-height);
  }

  .max-h-40 {
    max-height: calc(var(--spacing) * 40);
  }

  .max-h-48 {
    max-height: calc(var(--spacing) * 48);
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[90vh\] {
    max-height: 90vh;
  }

  .max-h-full {
    max-height: 100%;
  }

  .min-h-4 {
    min-height: calc(var(--spacing) * 4);
  }

  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }

  .min-h-\[3\.5rem\] {
    min-height: 3.5rem;
  }

  .min-h-\[3rem\] {
    min-height: 3rem;
  }

  .min-h-\[48px\] {
    min-height: 48px;
  }

  .min-h-\[100px\] {
    min-height: 100px;
  }

  .min-h-\[120px\] {
    min-height: 120px;
  }

  .min-h-\[400px\] {
    min-height: 400px;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-0\.5 {
    width: calc(var(--spacing) * .5);
  }

  .w-1\/3 {
    width: 33.3333%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }

  .w-3 {
    width: calc(var(--spacing) * 3);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-9 {
    width: calc(var(--spacing) * 9);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-20 {
    width: calc(var(--spacing) * 20);
  }

  .w-32 {
    width: calc(var(--spacing) * 32);
  }

  .w-36 {
    width: calc(var(--spacing) * 36);
  }

  .w-40 {
    width: calc(var(--spacing) * 40);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-72 {
    width: calc(var(--spacing) * 72);
  }

  .w-80 {
    width: calc(var(--spacing) * 80);
  }

  .w-96 {
    width: calc(var(--spacing) * 96);
  }

  .w-128 {
    width: calc(var(--spacing) * 128);
  }

  .w-\[1px\] {
    width: 1px;
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-5xl {
    max-width: var(--container-5xl);
  }

  .max-w-6xl {
    max-width: var(--container-6xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }

  .max-w-full {
    max-width: 100%;
  }

  .max-w-lg {
    max-width: var(--container-lg);
  }

  .max-w-md {
    max-width: var(--container-md);
  }

  .max-w-none {
    max-width: none;
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .max-w-xs {
    max-width: var(--container-xs);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .min-w-\[80px\] {
    min-width: 80px;
  }

  .min-w-\[120px\] {
    min-width: 120px;
  }

  .min-w-\[var\(--radix-select-trigger-width\)\] {
    min-width: var(--radix-select-trigger-width);
  }

  .flex-1 {
    flex: 1;
  }

  .flex-shrink-0, .shrink-0 {
    flex-shrink: 0;
  }

  .grow {
    flex-grow: 1;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {
    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-select-content-transform-origin\) {
    transform-origin: var(--radix-select-content-transform-origin);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * .5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }

  .animate-bounce {
    animation: var(--animate-bounce);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-not-allowed {
    cursor: not-allowed;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .touch-none {
    touch-action: none;
  }

  .resize-none {
    resize: none;
  }

  .scroll-my-1 {
    scroll-margin-block: calc(var(--spacing) * 1);
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .grid-cols-\[0_1fr\] {
    grid-template-columns: 0 1fr;
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-col-reverse {
    flex-direction: column-reverse;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-baseline {
    align-items: baseline;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .justify-items-start {
    justify-items: start;
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  :where(.space-y-0 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-12 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 12) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.-space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * -2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-12 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 12) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 12) * calc(1 - var(--tw-space-x-reverse)));
  }

  .gap-y-0\.5 {
    row-gap: calc(var(--spacing) * .5);
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded {
    border-radius: .25rem;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-\[4px\] {
    border-radius: 4px;
  }

  .rounded-\[inherit\] {
    border-radius: inherit;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--ff-radius-lg);
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-sm {
    border-radius: var(--ff-radius-sm);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-t-lg {
    border-top-left-radius: var(--ff-radius-lg);
    border-top-right-radius: var(--ff-radius-lg);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }

  .border-y {
    border-block-style: var(--tw-border-style);
    border-block-width: 1px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-none {
    --tw-border-style: none;
    border-style: none;
  }

  .border-\[\#00D4FF\]\/20 {
    border-color: oklab(80.4255% -.112589 -.0928607 / .2);
  }

  .border-\[\#00D4FF\]\/30 {
    border-color: oklab(80.4255% -.112589 -.0928607 / .3);
  }

  .border-\[var\(--border\)\] {
    border-color: var(--border);
  }

  .border-\[var\(--ff-accent\)\] {
    border-color: var(--ff-accent);
  }

  .border-\[var\(--ff-accent\)\]\/20 {
    border-color: var(--ff-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-accent\)\]\/20 {
      border-color: color-mix(in oklab, var(--ff-accent) 20%, transparent);
    }
  }

  .border-\[var\(--ff-accent\)\]\/30 {
    border-color: var(--ff-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-accent\)\]\/30 {
      border-color: color-mix(in oklab, var(--ff-accent) 30%, transparent);
    }
  }

  .border-\[var\(--ff-error\)\] {
    border-color: var(--ff-error);
  }

  .border-\[var\(--ff-error\)\]\/20 {
    border-color: var(--ff-error);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-error\)\]\/20 {
      border-color: color-mix(in oklab, var(--ff-error) 20%, transparent);
    }
  }

  .border-\[var\(--ff-primary\)\] {
    border-color: var(--ff-primary);
  }

  .border-\[var\(--ff-primary\)\]\/20 {
    border-color: var(--ff-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-primary\)\]\/20 {
      border-color: color-mix(in oklab, var(--ff-primary) 20%, transparent);
    }
  }

  .border-\[var\(--ff-primary\)\]\/30 {
    border-color: var(--ff-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-primary\)\]\/30 {
      border-color: color-mix(in oklab, var(--ff-primary) 30%, transparent);
    }
  }

  .border-\[var\(--ff-primary\)\]\/40 {
    border-color: var(--ff-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-primary\)\]\/40 {
      border-color: color-mix(in oklab, var(--ff-primary) 40%, transparent);
    }
  }

  .border-\[var\(--ff-secondary\)\] {
    border-color: var(--ff-secondary);
  }

  .border-\[var\(--ff-secondary\)\]\/20 {
    border-color: var(--ff-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-\[var\(--ff-secondary\)\]\/20 {
      border-color: color-mix(in oklab, var(--ff-secondary) 20%, transparent);
    }
  }

  .border-\[var\(--ff-success\)\] {
    border-color: var(--ff-success);
  }

  .border-\[var\(--ff-warning\)\] {
    border-color: var(--ff-warning);
  }

  .border-background {
    border-color: var(--background);
  }

  .border-blue-500 {
    border-color: var(--color-blue-500);
  }

  .border-blue-500\/20 {
    border-color: color-mix(in srgb, oklch(.623 .214 259.815) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-500\/20 {
      border-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }

  .border-border {
    border-color: var(--border);
  }

  .border-cyan-500\/20 {
    border-color: color-mix(in srgb, oklch(.715 .143 215.221) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-cyan-500\/20 {
      border-color: color-mix(in oklab, var(--color-cyan-500) 20%, transparent);
    }
  }

  .border-destructive\/20 {
    border-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-destructive\/20 {
      border-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .border-emerald-500 {
    border-color: var(--color-emerald-500);
  }

  .border-emerald-500\/20 {
    border-color: color-mix(in srgb, oklch(.696 .17 162.48) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-emerald-500\/20 {
      border-color: color-mix(in oklab, var(--color-emerald-500) 20%, transparent);
    }
  }

  .border-gray-400 {
    border-color: var(--color-gray-400);
  }

  .border-gray-700 {
    border-color: var(--color-gray-700);
  }

  .border-green-500 {
    border-color: var(--color-green-500);
  }

  .border-green-500\/20 {
    border-color: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/20 {
      border-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }

  .border-green-500\/40 {
    border-color: color-mix(in srgb, oklch(.723 .219 149.579) 40%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/40 {
      border-color: color-mix(in oklab, var(--color-green-500) 40%, transparent);
    }
  }

  .border-input {
    border-color: var(--input);
  }

  .border-orange-500 {
    border-color: var(--color-orange-500);
  }

  .border-orange-500\/20 {
    border-color: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-orange-500\/20 {
      border-color: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .border-primary {
    border-color: var(--primary);
  }

  .border-primary\/20 {
    border-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-primary\/20 {
      border-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .border-primary\/30 {
    border-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-primary\/30 {
      border-color: color-mix(in oklab, var(--primary) 30%, transparent);
    }
  }

  .border-purple-500 {
    border-color: var(--color-purple-500);
  }

  .border-purple-500\/20 {
    border-color: color-mix(in srgb, oklch(.627 .265 303.9) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/20 {
      border-color: color-mix(in oklab, var(--color-purple-500) 20%, transparent);
    }
  }

  .border-red-400 {
    border-color: var(--color-red-400);
  }

  .border-red-500 {
    border-color: var(--color-red-500);
  }

  .border-red-500\/20 {
    border-color: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/20 {
      border-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .border-red-500\/30 {
    border-color: color-mix(in srgb, oklch(.637 .237 25.331) 30%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/30 {
      border-color: color-mix(in oklab, var(--color-red-500) 30%, transparent);
    }
  }

  .border-secondary\/20 {
    border-color: var(--secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-secondary\/20 {
      border-color: color-mix(in oklab, var(--secondary) 20%, transparent);
    }
  }

  .border-success\/20 {
    border-color: var(--success);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-success\/20 {
      border-color: color-mix(in oklab, var(--success) 20%, transparent);
    }
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-warning\/20 {
    border-color: var(--warning);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-warning\/20 {
      border-color: color-mix(in oklab, var(--warning) 20%, transparent);
    }
  }

  .border-white {
    border-color: var(--color-white);
  }

  .border-white\/5 {
    border-color: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/5 {
      border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .border-white\/10 {
    border-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-white\/30 {
    border-color: #ffffff4d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/30 {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }

  .border-yellow-400 {
    border-color: var(--color-yellow-400);
  }

  .border-yellow-500\/20 {
    border-color: color-mix(in srgb, oklch(.795 .184 86.047) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-yellow-500\/20 {
      border-color: color-mix(in oklab, var(--color-yellow-500) 20%, transparent);
    }
  }

  .border-t-transparent {
    border-top-color: #0000;
  }

  .border-l-transparent {
    border-left-color: #0000;
  }

  .bg-\[\#00D4FF\] {
    background-color: #00d4ff;
  }

  .bg-\[\#00D4FF\]\/20 {
    background-color: oklab(80.4255% -.112589 -.0928607 / .2);
  }

  .bg-\[\#1e1e1e\] {
    background-color: #1e1e1e;
  }

  .bg-\[\#2d2d2d\] {
    background-color: #2d2d2d;
  }

  .bg-\[var\(--border\)\] {
    background-color: var(--border);
  }

  .bg-\[var\(--ff-accent\)\] {
    background-color: var(--ff-accent);
  }

  .bg-\[var\(--ff-accent\)\]\/5 {
    background-color: var(--ff-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-accent\)\]\/5 {
      background-color: color-mix(in oklab, var(--ff-accent) 5%, transparent);
    }
  }

  .bg-\[var\(--ff-accent\)\]\/10 {
    background-color: var(--ff-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-accent\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-accent) 10%, transparent);
    }
  }

  .bg-\[var\(--ff-accent\)\]\/20 {
    background-color: var(--ff-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-accent\)\]\/20 {
      background-color: color-mix(in oklab, var(--ff-accent) 20%, transparent);
    }
  }

  .bg-\[var\(--ff-bg-dark\)\] {
    background-color: var(--ff-bg-dark);
  }

  .bg-\[var\(--ff-error\)\] {
    background-color: var(--ff-error);
  }

  .bg-\[var\(--ff-error\)\]\/5 {
    background-color: var(--ff-error);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-error\)\]\/5 {
      background-color: color-mix(in oklab, var(--ff-error) 5%, transparent);
    }
  }

  .bg-\[var\(--ff-error\)\]\/10 {
    background-color: var(--ff-error);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-error\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-error) 10%, transparent);
    }
  }

  .bg-\[var\(--ff-primary\)\] {
    background-color: var(--ff-primary);
  }

  .bg-\[var\(--ff-primary\)\]\/10 {
    background-color: var(--ff-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-primary\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-primary) 10%, transparent);
    }
  }

  .bg-\[var\(--ff-primary\)\]\/20 {
    background-color: var(--ff-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-primary\)\]\/20 {
      background-color: color-mix(in oklab, var(--ff-primary) 20%, transparent);
    }
  }

  .bg-\[var\(--ff-secondary\)\] {
    background-color: var(--ff-secondary);
  }

  .bg-\[var\(--ff-secondary\)\]\/10 {
    background-color: var(--ff-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-secondary\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-secondary) 10%, transparent);
    }
  }

  .bg-\[var\(--ff-secondary\)\]\/20 {
    background-color: var(--ff-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-secondary\)\]\/20 {
      background-color: color-mix(in oklab, var(--ff-secondary) 20%, transparent);
    }
  }

  .bg-\[var\(--ff-success\)\] {
    background-color: var(--ff-success);
  }

  .bg-\[var\(--ff-success\)\]\/10 {
    background-color: var(--ff-success);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-success\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-success) 10%, transparent);
    }
  }

  .bg-\[var\(--ff-surface\)\] {
    background-color: var(--ff-surface);
  }

  .bg-\[var\(--ff-surface\)\]\/30 {
    background-color: var(--ff-surface);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-surface\)\]\/30 {
      background-color: color-mix(in oklab, var(--ff-surface) 30%, transparent);
    }
  }

  .bg-\[var\(--ff-surface\)\]\/90 {
    background-color: var(--ff-surface);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-surface\)\]\/90 {
      background-color: color-mix(in oklab, var(--ff-surface) 90%, transparent);
    }
  }

  .bg-\[var\(--ff-surface-light\)\] {
    background-color: var(--ff-surface-light);
  }

  .bg-\[var\(--ff-warning\)\] {
    background-color: var(--ff-warning);
  }

  .bg-\[var\(--ff-warning\)\]\/10 {
    background-color: var(--ff-warning);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-\[var\(--ff-warning\)\]\/10 {
      background-color: color-mix(in oklab, var(--ff-warning) 10%, transparent);
    }
  }

  .bg-\[var\(--input-background\)\] {
    background-color: var(--input-background);
  }

  .bg-accent {
    background-color: var(--accent);
  }

  .bg-accent\/20 {
    background-color: var(--accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-accent\/20 {
      background-color: color-mix(in oklab, var(--accent) 20%, transparent);
    }
  }

  .bg-accent\/60 {
    background-color: var(--accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-accent\/60 {
      background-color: color-mix(in oklab, var(--accent) 60%, transparent);
    }
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-black {
    background-color: var(--color-black);
  }

  .bg-black\/0 {
    background-color: #0000;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/0 {
      background-color: color-mix(in oklab, var(--color-black) 0%, transparent);
    }
  }

  .bg-black\/20 {
    background-color: #0003;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/20 {
      background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-black\/80 {
    background-color: #000c;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/80 {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }

  .bg-black\/90 {
    background-color: #000000e6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/90 {
      background-color: color-mix(in oklab, var(--color-black) 90%, transparent);
    }
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-blue-500\/10 {
    background-color: color-mix(in srgb, oklch(.623 .214 259.815) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/10 {
      background-color: color-mix(in oklab, var(--color-blue-500) 10%, transparent);
    }
  }

  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-card\/95 {
    background-color: var(--card);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-card\/95 {
      background-color: color-mix(in oklab, var(--card) 95%, transparent);
    }
  }

  .bg-cyan-500\/10 {
    background-color: color-mix(in srgb, oklch(.715 .143 215.221) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-cyan-500\/10 {
      background-color: color-mix(in oklab, var(--color-cyan-500) 10%, transparent);
    }
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-destructive\/10 {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-destructive\/10 {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .bg-emerald-500 {
    background-color: var(--color-emerald-500);
  }

  .bg-emerald-500\/10 {
    background-color: color-mix(in srgb, oklch(.696 .17 162.48) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-emerald-500\/10 {
      background-color: color-mix(in oklab, var(--color-emerald-500) 10%, transparent);
    }
  }

  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }

  .bg-gray-500 {
    background-color: var(--color-gray-500);
  }

  .bg-gray-500\/20 {
    background-color: color-mix(in srgb, oklch(.551 .027 264.364) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-500\/20 {
      background-color: color-mix(in oklab, var(--color-gray-500) 20%, transparent);
    }
  }

  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }

  .bg-gray-700 {
    background-color: var(--color-gray-700);
  }

  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }

  .bg-green-500 {
    background-color: var(--color-green-500);
  }

  .bg-green-500\/10 {
    background-color: color-mix(in srgb, oklch(.723 .219 149.579) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/10 {
      background-color: color-mix(in oklab, var(--color-green-500) 10%, transparent);
    }
  }

  .bg-green-500\/20 {
    background-color: color-mix(in srgb, oklch(.723 .219 149.579) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/20 {
      background-color: color-mix(in oklab, var(--color-green-500) 20%, transparent);
    }
  }

  .bg-green-600 {
    background-color: var(--color-green-600);
  }

  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }

  .bg-input-background {
    background-color: var(--input-background);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-muted-foreground {
    background-color: var(--muted-foreground);
  }

  .bg-muted\/30 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/30 {
      background-color: color-mix(in oklab, var(--muted) 30%, transparent);
    }
  }

  .bg-muted\/50 {
    background-color: var(--muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-muted\/50 {
      background-color: color-mix(in oklab, var(--muted) 50%, transparent);
    }
  }

  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }

  .bg-orange-500\/10 {
    background-color: color-mix(in srgb, oklch(.705 .213 47.604) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-orange-500\/10 {
      background-color: color-mix(in oklab, var(--color-orange-500) 10%, transparent);
    }
  }

  .bg-orange-600 {
    background-color: var(--color-orange-600);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-primary\/5 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/5 {
      background-color: color-mix(in oklab, var(--primary) 5%, transparent);
    }
  }

  .bg-primary\/10 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/10 {
      background-color: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }

  .bg-primary\/20 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .bg-primary\/60 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/60 {
      background-color: color-mix(in oklab, var(--primary) 60%, transparent);
    }
  }

  .bg-purple-500 {
    background-color: var(--color-purple-500);
  }

  .bg-purple-500\/10 {
    background-color: color-mix(in srgb, oklch(.627 .265 303.9) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/10 {
      background-color: color-mix(in oklab, var(--color-purple-500) 10%, transparent);
    }
  }

  .bg-purple-600 {
    background-color: var(--color-purple-600);
  }

  .bg-red-500 {
    background-color: var(--color-red-500);
  }

  .bg-red-500\/10 {
    background-color: color-mix(in srgb, oklch(.637 .237 25.331) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/10 {
      background-color: color-mix(in oklab, var(--color-red-500) 10%, transparent);
    }
  }

  .bg-red-500\/20 {
    background-color: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/20 {
      background-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .bg-red-900\/20 {
    background-color: color-mix(in srgb, oklch(.396 .141 25.723) 20%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-900\/20 {
      background-color: color-mix(in oklab, var(--color-red-900) 20%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-secondary\/5 {
    background-color: var(--secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-secondary\/5 {
      background-color: color-mix(in oklab, var(--secondary) 5%, transparent);
    }
  }

  .bg-secondary\/20 {
    background-color: var(--secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-secondary\/20 {
      background-color: color-mix(in oklab, var(--secondary) 20%, transparent);
    }
  }

  .bg-secondary\/60 {
    background-color: var(--secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-secondary\/60 {
      background-color: color-mix(in oklab, var(--secondary) 60%, transparent);
    }
  }

  .bg-success {
    background-color: var(--success);
  }

  .bg-success\/10 {
    background-color: var(--success);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-success\/10 {
      background-color: color-mix(in oklab, var(--success) 10%, transparent);
    }
  }

  .bg-teal-600 {
    background-color: var(--color-teal-600);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-warning {
    background-color: var(--warning);
  }

  .bg-warning\/10 {
    background-color: var(--warning);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-warning\/10 {
      background-color: color-mix(in oklab, var(--warning) 10%, transparent);
    }
  }

  .bg-white\/5 {
    background-color: #ffffff0d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }

  .bg-white\/10 {
    background-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .bg-white\/20 {
    background-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/20 {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }

  .bg-yellow-500\/10 {
    background-color: color-mix(in srgb, oklch(.795 .184 86.047) 10%, transparent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-yellow-500\/10 {
      background-color: color-mix(in oklab, var(--color-yellow-500) 10%, transparent);
    }
  }

  .bg-yellow-600 {
    background-color: var(--color-yellow-600);
  }

  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-\[\#00D4FF\]\/10 {
    --tw-gradient-from: oklab(80.4255% -.112589 -.0928607 / .1);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-\[var\(--ff-accent\)\] {
    --tw-gradient-from: var(--ff-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-\[var\(--ff-accent\)\]\/20 {
    --tw-gradient-from: var(--ff-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-\[var\(--ff-accent\)\]\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--ff-accent) 20%, transparent);
    }
  }

  .from-\[var\(--ff-bg-dark\)\] {
    --tw-gradient-from: var(--ff-bg-dark);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-\[var\(--ff-primary\)\] {
    --tw-gradient-from: var(--ff-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-\[var\(--ff-primary\)\]\/5 {
    --tw-gradient-from: var(--ff-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-\[var\(--ff-primary\)\]\/5 {
      --tw-gradient-from: color-mix(in oklab, var(--ff-primary) 5%, transparent);
    }
  }

  .from-\[var\(--ff-primary\)\]\/10 {
    --tw-gradient-from: var(--ff-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-\[var\(--ff-primary\)\]\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--ff-primary) 10%, transparent);
    }
  }

  .from-\[var\(--ff-primary\)\]\/20 {
    --tw-gradient-from: var(--ff-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-\[var\(--ff-primary\)\]\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--ff-primary) 20%, transparent);
    }
  }

  .from-\[var\(--ff-secondary\)\] {
    --tw-gradient-from: var(--ff-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-\[var\(--ff-warning\)\] {
    --tw-gradient-from: var(--ff-warning);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-accent {
    --tw-gradient-from: var(--accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-black {
    --tw-gradient-from: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-blue-600 {
    --tw-gradient-from: var(--color-blue-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-cyan-500 {
    --tw-gradient-from: var(--color-cyan-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-emerald-500 {
    --tw-gradient-from: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-green-500 {
    --tw-gradient-from: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-indigo-500 {
    --tw-gradient-from: var(--color-indigo-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-500 {
    --tw-gradient-from: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-orange-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-orange-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .from-pink-500 {
    --tw-gradient-from: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary\/10 {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-primary\/10 {
      --tw-gradient-from: color-mix(in oklab, var(--primary) 10%, transparent);
    }
  }

  .from-primary\/20 {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-primary\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .from-purple-500 {
    --tw-gradient-from: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-red-500\/20 {
    --tw-gradient-from: color-mix(in srgb, oklch(.637 .237 25.331) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .from-red-500\/20 {
      --tw-gradient-from: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }

  .from-secondary {
    --tw-gradient-from: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-success {
    --tw-gradient-from: var(--success);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-teal-500 {
    --tw-gradient-from: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-warning {
    --tw-gradient-from: var(--warning);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-\[var\(--ff-secondary\)\]\/5 {
    --tw-gradient-via: var(--ff-secondary);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-\[var\(--ff-secondary\)\]\/5 {
      --tw-gradient-via: color-mix(in oklab, var(--ff-secondary) 5%, transparent);
    }
  }

  .via-\[var\(--ff-secondary\)\]\/20 {
    --tw-gradient-via: var(--ff-secondary);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .via-\[var\(--ff-secondary\)\]\/20 {
      --tw-gradient-via: color-mix(in oklab, var(--ff-secondary) 20%, transparent);
    }
  }

  .via-\[var\(--ff-surface\)\] {
    --tw-gradient-via: var(--ff-surface);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-secondary {
    --tw-gradient-via: var(--secondary);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .via-transparent {
    --tw-gradient-via: transparent;
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-\[\#4DD0E1\]\/10 {
    --tw-gradient-to: oklab(79.3107% -.10172 -.0525189 / .1);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-accent\)\] {
    --tw-gradient-to: var(--ff-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-accent\)\]\/5 {
    --tw-gradient-to: var(--ff-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-\[var\(--ff-accent\)\]\/5 {
      --tw-gradient-to: color-mix(in oklab, var(--ff-accent) 5%, transparent);
    }
  }

  .to-\[var\(--ff-accent\)\]\/20 {
    --tw-gradient-to: var(--ff-accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-\[var\(--ff-accent\)\]\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--ff-accent) 20%, transparent);
    }
  }

  .to-\[var\(--ff-bg-dark\)\] {
    --tw-gradient-to: var(--ff-bg-dark);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-bg-dark\)\]\/50 {
    --tw-gradient-to: var(--ff-bg-dark);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-\[var\(--ff-bg-dark\)\]\/50 {
      --tw-gradient-to: color-mix(in oklab, var(--ff-bg-dark) 50%, transparent);
    }
  }

  .to-\[var\(--ff-error\)\] {
    --tw-gradient-to: var(--ff-error);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-primary\)\] {
    --tw-gradient-to: var(--ff-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-secondary\)\] {
    --tw-gradient-to: var(--ff-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-\[var\(--ff-secondary\)\]\/10 {
    --tw-gradient-to: var(--ff-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-\[var\(--ff-secondary\)\]\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--ff-secondary) 10%, transparent);
    }
  }

  .to-\[var\(--ff-secondary\)\]\/20 {
    --tw-gradient-to: var(--ff-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-\[var\(--ff-secondary\)\]\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--ff-secondary) 20%, transparent);
    }
  }

  .to-accent {
    --tw-gradient-to: var(--accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-cyan-500 {
    --tw-gradient-to: var(--color-cyan-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-emerald-500 {
    --tw-gradient-to: var(--color-emerald-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-gray-800 {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-500 {
    --tw-gradient-to: var(--color-green-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-green-600 {
    --tw-gradient-to: var(--color-green-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-indigo-600 {
    --tw-gradient-to: var(--color-indigo-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500 {
    --tw-gradient-to: var(--color-orange-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-orange-500\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(.705 .213 47.604) 20%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-500\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-500) 20%, transparent);
    }
  }

  .to-orange-600\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(.646 .222 41.116) 30%, transparent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-orange-600\/30 {
      --tw-gradient-to: color-mix(in oklab, var(--color-orange-600) 30%, transparent);
    }
  }

  .to-pink-500 {
    --tw-gradient-to: var(--color-pink-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-primary\/90 {
    --tw-gradient-to: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-primary\/90 {
      --tw-gradient-to: color-mix(in oklab, var(--primary) 90%, transparent);
    }
  }

  .to-purple-500 {
    --tw-gradient-to: var(--color-purple-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-red-500 {
    --tw-gradient-to: var(--color-red-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-secondary {
    --tw-gradient-to: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-secondary\/10 {
    --tw-gradient-to: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-secondary\/10 {
      --tw-gradient-to: color-mix(in oklab, var(--secondary) 10%, transparent);
    }
  }

  .to-secondary\/20 {
    --tw-gradient-to: var(--secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  @supports (color: color-mix(in lab, red, red)) {
    .to-secondary\/20 {
      --tw-gradient-to: color-mix(in oklab, var(--secondary) 20%, transparent);
    }
  }

  .to-teal-500 {
    --tw-gradient-to: var(--color-teal-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-teal-600 {
    --tw-gradient-to: var(--color-teal-600);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-yellow-500 {
    --tw-gradient-to: var(--color-yellow-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    background-clip: text;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-warning {
    fill: var(--warning);
  }

  .fill-yellow-400 {
    fill: var(--color-yellow-400);
  }

  .object-contain {
    object-fit: contain;
  }

  .object-cover {
    object-fit: cover;
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-6 {
    padding: calc(var(--spacing) * 6);
  }

  .p-8 {
    padding: calc(var(--spacing) * 8);
  }

  .p-px {
    padding: 1px;
  }

  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }

  .px-12 {
    padding-inline: calc(var(--spacing) * 12);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }

  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }

  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }

  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }

  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .pl-10 {
    padding-left: calc(var(--spacing) * 10);
  }

  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }

  .text-center {
    text-align: center;
  }

  .text-left {
    text-align: left;
  }

  .text-right {
    text-align: right;
  }

  .align-middle {
    vertical-align: middle;
  }

  .font-mono {
    font-family: var(--font-mono);
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }

  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }

  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }

  .tracking-wide {
    --tw-tracking: var(--tracking-wide);
    letter-spacing: var(--tracking-wide);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .whitespace-normal {
    white-space: normal;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }

  .text-\[\#00D4FF\] {
    color: #00d4ff;
  }

  .text-\[var\(--ff-accent\)\] {
    color: var(--ff-accent);
  }

  .text-\[var\(--ff-error\)\] {
    color: var(--ff-error);
  }

  .text-\[var\(--ff-primary\)\] {
    color: var(--ff-primary);
  }

  .text-\[var\(--ff-secondary\)\] {
    color: var(--ff-secondary);
  }

  .text-\[var\(--ff-success\)\] {
    color: var(--ff-success);
  }

  .text-\[var\(--ff-text-muted\)\] {
    color: var(--ff-text-muted);
  }

  .text-\[var\(--ff-text-muted\)\]\/50 {
    color: var(--ff-text-muted);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-\[var\(--ff-text-muted\)\]\/50 {
      color: color-mix(in oklab, var(--ff-text-muted) 50%, transparent);
    }
  }

  .text-\[var\(--ff-text-primary\)\] {
    color: var(--ff-text-primary);
  }

  .text-\[var\(--ff-text-secondary\)\] {
    color: var(--ff-text-secondary);
  }

  .text-\[var\(--ff-warning\)\] {
    color: var(--ff-warning);
  }

  .text-accent {
    color: var(--accent);
  }

  .text-accent-foreground {
    color: var(--accent-foreground);
  }

  .text-black {
    color: var(--color-black);
  }

  .text-blue-300 {
    color: var(--color-blue-300);
  }

  .text-blue-400 {
    color: var(--color-blue-400);
  }

  .text-blue-500 {
    color: var(--color-blue-500);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-current {
    color: currentColor;
  }

  .text-cyan-400 {
    color: var(--color-cyan-400);
  }

  .text-cyan-500 {
    color: var(--color-cyan-500);
  }

  .text-destructive {
    color: var(--destructive);
  }

  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }

  .text-emerald-300 {
    color: var(--color-emerald-300);
  }

  .text-emerald-400 {
    color: var(--color-emerald-400);
  }

  .text-emerald-500 {
    color: var(--color-emerald-500);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-gray-200 {
    color: var(--color-gray-200);
  }

  .text-gray-300 {
    color: var(--color-gray-300);
  }

  .text-gray-400 {
    color: var(--color-gray-400);
  }

  .text-gray-500 {
    color: var(--color-gray-500);
  }

  .text-green-400 {
    color: var(--color-green-400);
  }

  .text-green-500 {
    color: var(--color-green-500);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-orange-400 {
    color: var(--color-orange-400);
  }

  .text-orange-500 {
    color: var(--color-orange-500);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-primary\/80 {
    color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-primary\/80 {
      color: color-mix(in oklab, var(--primary) 80%, transparent);
    }
  }

  .text-purple-300 {
    color: var(--color-purple-300);
  }

  .text-purple-400 {
    color: var(--color-purple-400);
  }

  .text-purple-500 {
    color: var(--color-purple-500);
  }

  .text-red-300 {
    color: var(--color-red-300);
  }

  .text-red-400 {
    color: var(--color-red-400);
  }

  .text-red-500 {
    color: var(--color-red-500);
  }

  .text-secondary {
    color: var(--secondary);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-success {
    color: var(--success);
  }

  .text-success-foreground {
    color: var(--success-foreground);
  }

  .text-transparent {
    color: #0000;
  }

  .text-warning {
    color: var(--warning);
  }

  .text-warning-foreground {
    color: var(--warning-foreground);
  }

  .text-white {
    color: var(--color-white);
  }

  .text-white\/40 {
    color: #fff6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/40 {
      color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }

  .text-white\/60 {
    color: #fff9;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/60 {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }

  .text-white\/70 {
    color: #ffffffb3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/70 {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }

  .text-white\/80 {
    color: #fffc;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/80 {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }

  .text-white\/90 {
    color: #ffffffe6;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/90 {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }

  .text-yellow-400 {
    color: var(--color-yellow-400);
  }

  .text-yellow-500 {
    color: var(--color-yellow-500);
  }

  .capitalize {
    text-transform: capitalize;
  }

  .lowercase {
    text-transform: lowercase;
  }

  .uppercase {
    text-transform: uppercase;
  }

  .line-through {
    text-decoration-line: line-through;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-10 {
    opacity: .1;
  }

  .opacity-30 {
    opacity: .3;
  }

  .opacity-50 {
    opacity: .5;
  }

  .opacity-60 {
    opacity: .6;
  }

  .opacity-70 {
    opacity: .7;
  }

  .opacity-80 {
    opacity: .8;
  }

  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-\[var\(--ff-primary\)\] {
    --tw-ring-color: var(--ff-primary);
  }

  .ring-blue-500 {
    --tw-ring-color: var(--color-blue-500);
  }

  .ring-emerald-500 {
    --tw-ring-color: var(--color-emerald-500);
  }

  .ring-green-500 {
    --tw-ring-color: var(--color-green-500);
  }

  .ring-orange-500 {
    --tw-ring-color: var(--color-orange-500);
  }

  .ring-primary {
    --tw-ring-color: var(--primary);
  }

  .ring-purple-500 {
    --tw-ring-color: var(--color-purple-500);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-none {
    transition-property: none;
  }

  .delay-1000 {
    transition-delay: 1s;
  }

  .delay-2000 {
    transition-delay: 2s;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-500 {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .delay-1000 {
    animation-delay: 1s;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .delay-2000 {
    animation-delay: 2s;
  }

  .paused {
    animation-play-state: paused;
  }

  .running {
    animation-play-state: running;
  }

  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:scale-110:is(:where(.group):hover *) {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .group-hover\:rotate-12:is(:where(.group):hover *) {
      rotate: 12deg;
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-\[var\(--ff-primary\)\]\/20:is(:where(.group):hover *) {
      background-color: var(--ff-primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:bg-\[var\(--ff-primary\)\]\/20:is(:where(.group):hover *) {
        background-color: color-mix(in oklab, var(--ff-primary) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:bg-black\/40:is(:where(.group):hover *) {
      background-color: #0006;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:bg-black\/40:is(:where(.group):hover *) {
        background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .group-hover\:text-\[var\(--ff-primary\)\]:is(:where(.group):hover *) {
      color: var(--ff-primary);
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-5:is(:where(.group):hover *) {
      opacity: .05;
    }
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  .group-data-\[disabled\=true\]\:pointer-events-none:is(:where(.group)[data-disabled="true"] *) {
    pointer-events: none;
  }

  .group-data-\[disabled\=true\]\:opacity-50:is(:where(.group)[data-disabled="true"] *) {
    opacity: .5;
  }

  .peer-disabled\:cursor-not-allowed:is(:where(.peer):disabled ~ *) {
    cursor: not-allowed;
  }

  .peer-disabled\:opacity-50:is(:where(.peer):disabled ~ *) {
    opacity: .5;
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .file\:text-foreground::file-selector-button {
    color: var(--foreground);
  }

  .placeholder\:text-\[var\(--ff-text-muted\)\]::placeholder {
    color: var(--ff-text-muted);
  }

  .placeholder\:text-muted-foreground::placeholder {
    color: var(--muted-foreground);
  }

  .last\:border-b-0:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }

  @media (hover: hover) {
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }

  @media (hover: hover) {
    .hover\:scale-\[1\.02\]:hover {
      scale: 1.02;
    }
  }

  @media (hover: hover) {
    .hover\:transform:hover {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
  }

  @media (hover: hover) {
    .hover\:border-primary\/40:hover {
      border-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-primary\/40:hover {
        border-color: color-mix(in oklab, var(--primary) 40%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-primary\/60:hover {
      border-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-primary\/60:hover {
        border-color: color-mix(in oklab, var(--primary) 60%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-white\/20:hover {
      border-color: #fff3;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-white\/20:hover {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:border-white\/30:hover {
      border-color: #ffffff4d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-white\/30:hover {
        border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[\#00B8E6\]:hover {
      background-color: #00b8e6;
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[\#00D4FF\]\/10:hover {
      background-color: oklab(80.4255% -.112589 -.0928607 / .1);
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-accent-600\)\]:hover {
      background-color: var(--ff-accent-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-primary\)\]\/10:hover {
      background-color: var(--ff-primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-\[var\(--ff-primary\)\]\/10:hover {
        background-color: color-mix(in oklab, var(--ff-primary) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-primary\)\]\/90:hover {
      background-color: var(--ff-primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-\[var\(--ff-primary\)\]\/90:hover {
        background-color: color-mix(in oklab, var(--ff-primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-primary-600\)\]:hover {
      background-color: var(--ff-primary-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-secondary-600\)\]:hover {
      background-color: var(--ff-secondary-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-surface\)\]:hover {
      background-color: var(--ff-surface);
    }
  }

  @media (hover: hover) {
    .hover\:bg-\[var\(--ff-surface-light\)\]:hover {
      background-color: var(--ff-surface-light);
    }
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-black\/70:hover {
      background-color: #000000b3;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-black\/70:hover {
        background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-green-600:hover {
      background-color: var(--color-green-600);
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/30:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/30:hover {
        background-color: color-mix(in oklab, var(--muted) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted\/50:hover {
      background-color: var(--muted);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-muted\/50:hover {
        background-color: color-mix(in oklab, var(--muted) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/5:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/5:hover {
        background-color: color-mix(in oklab, var(--primary) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/5:hover {
      background-color: #ffffff0d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/5:hover {
        background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/10:hover {
      background-color: #ffffff1a;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/10:hover {
        background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/30:hover {
      background-color: #ffffff4d;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/30:hover {
        background-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:from-\[var\(--ff-primary-600\)\]:hover {
      --tw-gradient-from: var(--ff-primary-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:to-\[var\(--ff-secondary-600\)\]:hover {
      --tw-gradient-to: var(--ff-secondary-600);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }

  @media (hover: hover) {
    .hover\:text-\[var\(--ff-primary-400\)\]:hover {
      color: var(--ff-primary-400);
    }
  }

  @media (hover: hover) {
    .hover\:text-\[var\(--ff-secondary\)\]:hover {
      color: var(--ff-secondary);
    }
  }

  @media (hover: hover) {
    .hover\:text-\[var\(--ff-text-primary\)\]:hover {
      color: var(--ff-text-primary);
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-foreground:hover {
      color: var(--foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-gray-300:hover {
      color: var(--color-gray-300);
    }
  }

  @media (hover: hover) {
    .hover\:text-red-300:hover {
      color: var(--color-red-300);
    }
  }

  @media (hover: hover) {
    .hover\:text-white:hover {
      color: var(--color-white);
    }
  }

  @media (hover: hover) {
    .hover\:no-underline:hover {
      text-decoration-line: none;
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:shadow-md:hover {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:border-\[var\(--ff-primary\)\]:focus {
    border-color: var(--ff-primary);
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-\[var\(--ff-primary\)\]:focus {
    --tw-ring-color: var(--ff-primary);
  }

  .focus\:ring-ring:focus {
    --tw-ring-color: var(--ring);
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-1:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-2:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring:focus-visible {
    --tw-ring-color: var(--ring);
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-none:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  .active\:scale-95:active {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:transform-none:disabled {
    transform: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:grid-cols-\[calc\(var\(--spacing\)\*4\)_1fr\]:has( > svg) {
    grid-template-columns: calc(var(--spacing) * 4) 1fr;
  }

  .has-\[\>svg\]\:gap-x-3:has( > svg) {
    column-gap: calc(var(--spacing) * 3);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[placeholder\]\:text-muted-foreground[data-placeholder] {
    color: var(--muted-foreground);
  }

  .data-\[side\=bottom\]\:translate-y-1[data-side="bottom"] {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:-translate-x-1[data-side="left"] {
    --tw-translate-x: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:translate-x-1[data-side="right"] {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:-translate-y-1[data-side="top"] {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[size\=default\]\:h-9[data-size="default"] {
    height: calc(var(--spacing) * 9);
  }

  .data-\[size\=sm\]\:h-8[data-size="sm"] {
    height: calc(var(--spacing) * 8);
  }

  :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
    color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    :is(.\*\:data-\[slot\=alert-description\]\:text-destructive\/90 > *)[data-slot="alert-description"] {
      color: color-mix(in oklab, var(--destructive) 90%, transparent);
    }
  }

  :is(.\*\:data-\[slot\=select-value\]\:line-clamp-1 > *)[data-slot="select-value"] {
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }

  :is(.\*\:data-\[slot\=select-value\]\:flex > *)[data-slot="select-value"] {
    display: flex;
  }

  :is(.\*\:data-\[slot\=select-value\]\:items-center > *)[data-slot="select-value"] {
    align-items: center;
  }

  :is(.\*\:data-\[slot\=select-value\]\:gap-2 > *)[data-slot="select-value"] {
    gap: calc(var(--spacing) * 2);
  }

  .data-\[state\=active\]\:bg-\[var\(--ff-primary\)\][data-state="active"] {
    background-color: var(--ff-primary);
  }

  .data-\[state\=active\]\:bg-background[data-state="active"] {
    background-color: var(--background);
  }

  .data-\[state\=active\]\:text-foreground[data-state="active"] {
    color: var(--foreground);
  }

  .data-\[state\=active\]\:text-white[data-state="active"] {
    color: var(--color-white);
  }

  .data-\[state\=active\]\:shadow-sm[data-state="active"] {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .data-\[state\=checked\]\:translate-x-\[calc\(100\%-2px\)\][data-state="checked"] {
    --tw-translate-x: calc(100% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=checked\]\:border-primary[data-state="checked"] {
    border-color: var(--primary);
  }

  .data-\[state\=checked\]\:bg-primary[data-state="checked"] {
    background-color: var(--primary);
  }

  .data-\[state\=checked\]\:text-primary-foreground[data-state="checked"] {
    color: var(--primary-foreground);
  }

  .data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
    animation: accordion-up var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
    animation: accordion-down var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--accent-foreground);
  }

  .data-\[state\=open\]\:text-muted-foreground[data-state="open"] {
    color: var(--muted-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[state\=unchecked\]\:translate-x-0[data-state="unchecked"] {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .data-\[state\=unchecked\]\:bg-switch-background[data-state="unchecked"] {
    background-color: var(--switch-background);
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--destructive);
  }

  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }

  @media (width >= 40rem) {
    .sm\:flex {
      display: flex;
    }
  }

  @media (width >= 40rem) {
    .sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-6 {
      height: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:min-h-\[3\.5rem\] {
      min-height: 3.5rem;
    }
  }

  @media (width >= 40rem) {
    .sm\:min-h-\[4rem\] {
      min-height: 4rem;
    }
  }

  @media (width >= 40rem) {
    .sm\:w-6 {
      width: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-md {
      max-width: var(--container-md);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-initial {
      flex: 0 auto;
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:items-center {
      align-items: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-between {
      justify-content: space-between;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-4 {
      gap: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    .sm\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    :where(.sm\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 40rem) {
    .sm\:rounded-xl {
      border-radius: calc(var(--radius)  + 4px);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-0 {
      padding-inline: calc(var(--spacing) * 0);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-3 {
      padding-block: calc(var(--spacing) * 3);
    }
  }

  @media (width >= 40rem) {
    .sm\:py-4 {
      padding-block: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 40rem) {
    .sm\:text-center {
      text-align: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-left {
      text-align: left;
    }
  }

  @media (width >= 40rem) {
    .sm\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-5 {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:items-center {
      align-items: center;
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-1 {
      grid-column: span 1 / span 1;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-2 {
      grid-column: span 2 / span 2;
    }
  }

  @media (width >= 64rem) {
    .lg\:col-span-3 {
      grid-column: span 3 / span 3;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:inline {
      display: inline;
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-6 {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 64rem) {
    .lg\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-8xl {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[state\=checked\]\:bg-primary:is(.dark *)[data-state="checked"] {
    background-color: var(--primary);
  }

  .dark\:data-\[state\=checked\]\:bg-primary-foreground:is(.dark *)[data-state="checked"] {
    background-color: var(--primary-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-card-foreground:is(.dark *)[data-state="unchecked"] {
    background-color: var(--card-foreground);
  }

  .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[state\=unchecked\]\:bg-input\/80:is(.dark *)[data-state="unchecked"] {
      background-color: color-mix(in oklab, var(--input) 80%, transparent);
    }
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .\[\&_p\]\:leading-relaxed p {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:size-4 svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  :is(.\*\:\[span\]\:last\:flex > *):is(span):last-child {
    display: flex;
  }

  :is(.\*\:\[span\]\:last\:items-center > *):is(span):last-child {
    align-items: center;
  }

  :is(.\*\:\[span\]\:last\:gap-2 > *):is(span):last-child {
    gap: calc(var(--spacing) * 2);
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--destructive) !important;
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\&\>svg\]\:pointer-events-none > svg {
    pointer-events: none;
  }

  .\[\&\>svg\]\:size-3 > svg {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  .\[\&\>svg\]\:size-4 > svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>svg\]\:translate-y-0\.5 > svg {
    --tw-translate-y: calc(var(--spacing) * .5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .\[\&\>svg\]\:text-current > svg {
    color: currentColor;
  }

  .\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state="open"] > svg {
    rotate: 180deg;
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:bg-secondary\/90:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      a.\[a\&\]\:hover\:bg-secondary\/90:hover {
        background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    a.\[a\&\]\:hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }
}

:root {
  --figma-bg-dark-primary: #0d1321;
  --figma-bg-dark-secondary: #0d1b2a;
  --figma-surface-card: #1e293b99;
  --figma-purple: #5e3df5;
  --figma-teal: #5df9a4;
  --figma-blue: #2d6fbe;
  --figma-orange: #f47a34;
  --figma-text-primary: #fff;
  --figma-text-secondary: #cbd5e1;
  --figma-text-muted: #94a3b8;
  --figma-gradient-purple-teal: linear-gradient(135deg, #5e3df5 0%, #5df9a4 100%);
  --figma-gradient-teal-blue: linear-gradient(135deg, #5df9a4 0%, #2d6fbe 100%);
  --figma-gradient-blue-orange: linear-gradient(135deg, #2d6fbe 0%, #f47a34 100%);
  --figma-gradient-orange-purple: linear-gradient(135deg, #f47a34 0%, #5e3df5 100%);
}

@keyframes figma-card-hover {
  0% {
    transform: translateY(0)scale(1);
    box-shadow: 0 4px 12px #00000026;
  }

  100% {
    transform: translateY(-4px)scale(1.02);
    box-shadow: 0 12px 24px #00000040;
  }
}

@keyframes figma-button-ripple {
  0% {
    opacity: 1;
    transform: scale(0);
  }

  100% {
    opacity: 0;
    transform: scale(4);
  }
}

@keyframes figma-progress-fill {
  0% {
    width: 0%;
  }

  100% {
    width: var(--progress-value, 100%);
  }
}

@keyframes figma-fade-slide-up {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes figma-stagger-fade {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes figma-checkmark-draw {
  0% {
    stroke-dashoffset: 50px;
  }

  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes figma-pulse-glow {
  0%, 100% {
    box-shadow: 0 0 20px #5e3df54d;
  }

  50% {
    box-shadow: 0 0 40px #5e3df599;
  }
}

@keyframes figma-modal-slide-in {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes figma-shimmer {
  0% {
    background-position: -200%;
  }

  100% {
    background-position: 200%;
  }
}

.figma-card-interactive {
  cursor: pointer;
  background: var(--figma-surface-card);
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  border: 1px solid #ffffff1a;
  border-radius: 16px;
  transition: all .3s cubic-bezier(0, 0, .2, 1);
}

.figma-card-interactive:hover {
  border-color: #5e3df54d;
  animation: .3s cubic-bezier(0, 0, .2, 1) forwards figma-card-hover;
}

.figma-btn-ripple {
  position: relative;
  overflow: hidden;
}

.figma-btn-ripple:after {
  content: "";
  pointer-events: none;
  background: #ffffff80;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%)scale(0);
}

.figma-btn-ripple:active:after {
  animation: .6s cubic-bezier(0, 0, .2, 1) figma-button-ripple;
}

.figma-fade-slide-up {
  animation: .6s cubic-bezier(0, 0, .2, 1) figma-fade-slide-up;
}

.figma-stagger-fade > * {
  opacity: 0;
  animation: .6s cubic-bezier(0, 0, .2, 1) forwards figma-stagger-fade;
}

.figma-stagger-fade > :first-child {
  animation-delay: .1s;
}

.figma-stagger-fade > :nth-child(2) {
  animation-delay: .2s;
}

.figma-stagger-fade > :nth-child(3) {
  animation-delay: .3s;
}

.figma-stagger-fade > :nth-child(4) {
  animation-delay: .4s;
}

.figma-stagger-fade > :nth-child(5) {
  animation-delay: .5s;
}

.figma-stagger-fade > :nth-child(6) {
  animation-delay: .6s;
}

.figma-stagger-fade > :nth-child(7) {
  animation-delay: .7s;
}

.figma-stagger-fade > :nth-child(8) {
  animation-delay: .8s;
}

.figma-text-gradient {
  background: var(--figma-gradient-purple-teal);
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.figma-glow {
  animation: 2s ease-in-out infinite figma-pulse-glow;
}

.figma-parallax-bg {
  z-index: -1;
  will-change: transform;
  filter: blur(8px) brightness(.4);
  background-position: center;
  background-size: cover;
  width: 100%;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
}

.figma-scroll-progress {
  z-index: 50;
  pointer-events: none;
  background: #ffffff1a;
  width: 4px;
  height: 100vh;
  position: fixed;
  top: 0;
  right: 8px;
}

.figma-scroll-progress-fill {
  background: var(--figma-orange);
  width: 100%;
  height: 0%;
  transition: height .1s cubic-bezier(0, 0, .2, 1);
  box-shadow: 0 0 10px #f47a3480;
}

.figma-nav-sticky {
  z-index: 50;
  transition: all .3s cubic-bezier(0, 0, .2, 1);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
}

.figma-nav-sticky.scrolled {
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  background: #0d1321cc;
  border-bottom: 1px solid #ffffff1a;
  box-shadow: 0 4px 12px #00000040;
}

.figma-workflow-progress {
  justify-content: center;
  align-items: center;
  gap: 16px;
  margin-bottom: 48px;
  display: flex;
}

.figma-workflow-step {
  flex-direction: column;
  align-items: center;
  gap: 8px;
  display: flex;
}

.figma-workflow-step-circle {
  border-radius: 50%;
  justify-content: center;
  align-items: center;
  width: 48px;
  height: 48px;
  font-size: 18px;
  font-weight: 700;
  transition: all .3s cubic-bezier(0, 0, .2, 1);
  display: flex;
}

.figma-workflow-step-circle.completed {
  color: #fff;
  background: linear-gradient(135deg, #10b981 0%, #34d399 100%);
}

.figma-workflow-step-circle.active {
  background: var(--figma-gradient-purple-teal);
  color: #fff;
  transform: scale(1.1);
  box-shadow: 0 4px 12px #5e3df566;
}

.figma-workflow-step-circle.upcoming {
  color: #ffffff80;
  background: #ffffff1a;
}

.figma-workflow-step-label {
  color: #fff9;
  text-align: center;
  font-size: 12px;
}

.figma-workflow-connector {
  background: #fff3;
  width: 64px;
  height: 2px;
  transition: background .3s cubic-bezier(0, 0, .2, 1);
}

.figma-workflow-connector.completed {
  background: linear-gradient(90deg, #10b981 0%, #34d399 100%);
}

.figma-feature-card {
  background: var(--figma-surface-card);
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  border: 1px solid #ffffff1a;
  border-radius: 16px;
  padding: 24px;
  transition: all .3s cubic-bezier(0, 0, .2, 1);
  position: relative;
  overflow: hidden;
}

.figma-feature-card:before {
  content: "";
  background: linear-gradient(90deg, #0000 0%, #5e3df580 50%, #0000 100%);
  height: 1px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.figma-feature-card:hover {
  border-color: #5e3df54d;
  transform: translateY(-4px);
  box-shadow: 0 12px 24px #0000004d;
}

.figma-feature-icon {
  border-radius: 12px;
  justify-content: center;
  align-items: center;
  width: 64px;
  height: 64px;
  margin-bottom: 16px;
  display: flex;
}

.figma-feature-icon.purple-teal {
  background: var(--figma-gradient-purple-teal);
}

.figma-feature-icon.teal-blue {
  background: var(--figma-gradient-teal-blue);
}

.figma-feature-icon.blue-orange {
  background: var(--figma-gradient-blue-orange);
}

.figma-feature-icon.orange-purple {
  background: var(--figma-gradient-orange-purple);
}

.figma-modal-backdrop {
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  z-index: 100;
  background: #000000e6;
  animation: .2s cubic-bezier(0, 0, .2, 1) fade-in;
  position: fixed;
  inset: 0;
}

.figma-modal-content {
  background: var(--figma-bg-dark-secondary);
  border: 1px solid #ffffff1a;
  border-radius: 16px;
  max-width: 90vw;
  max-height: 90vh;
  animation: .3s cubic-bezier(0, 0, .2, 1) figma-modal-slide-in;
  position: fixed;
  top: 50%;
  left: 50%;
  overflow: auto;
  transform: translate(-50%, -50%);
  box-shadow: 0 24px 48px #00000080;
}

.figma-skeleton {
  background: linear-gradient(90deg, #ffffff0d 0%, #ffffff1a 50%, #ffffff0d 100%) 0 0 / 200% 100%;
  border-radius: 8px;
  animation: 1.5s infinite figma-shimmer;
}

.figma-loader {
  border: 4px solid #ffffff1a;
  border-top-color: var(--figma-purple);
  border-radius: 50%;
  width: 48px;
  height: 48px;
  animation: 1s linear infinite spin;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.figma-progress-bar {
  background: #ffffff1a;
  border-radius: 9999px;
  width: 100%;
  height: 8px;
  overflow: hidden;
}

.figma-progress-fill {
  background: var(--figma-gradient-purple-teal);
  border-radius: 9999px;
  height: 100%;
  transition: width .3s cubic-bezier(0, 0, .2, 1);
  position: relative;
}

.figma-progress-fill:after {
  content: "";
  background: linear-gradient(90deg, #0000 0%, #ffffff4d 50%, #0000 100%);
  animation: 2s infinite figma-shimmer;
  position: absolute;
  inset: 0;
}

.figma-badge {
  color: #fff;
  border-radius: 9999px;
  align-items: center;
  padding: 4px 12px;
  font-size: 12px;
  font-weight: 600;
  display: inline-flex;
}

.figma-badge.purple-teal {
  background: var(--figma-gradient-purple-teal);
}

.figma-badge.teal-blue {
  background: var(--figma-gradient-teal-blue);
}

.figma-badge.blue-orange {
  background: var(--figma-gradient-blue-orange);
}

.figma-badge.orange-purple {
  background: var(--figma-gradient-orange-purple);
}

.figma-card-interactive:focus-visible, .figma-btn-ripple:focus-visible {
  outline: 2px solid var(--figma-purple);
  outline-offset: 2px;
}

@media (prefers-reduced-motion: reduce) {
  *, :before, :after {
    transition-duration: .01ms !important;
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
  }

  .figma-parallax-bg {
    transform: none !important;
  }
}

.figma-sr-only {
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

@media (width <= 768px) {
  .figma-workflow-progress {
    gap: 8px;
  }

  .figma-workflow-step-circle {
    width: 40px;
    height: 40px;
    font-size: 16px;
  }

  .figma-workflow-connector {
    width: 32px;
  }

  .figma-feature-card {
    padding: 16px;
  }

  .figma-feature-icon {
    width: 48px;
    height: 48px;
  }

  .figma-modal-content {
    border-radius: 12px;
    max-width: 95vw;
  }
}

@media (width >= 769px) {
  .figma-card-interactive:hover {
    transform: translateY(-4px)scale(1.02);
  }
}

:root {
  --ff-text-muted-accessible: #a8b5c8;
  --ff-text-primary: #fff;
  --ff-text-secondary: #cbd5e1;
  --ff-text-muted: #a8b5c8;
}

.ff-text-muted, [class*="text-muted"] {
  color: var(--ff-text-muted-accessible) !important;
}

.ff-btn-primary {
  background: var(--ff-primary);
  color: var(--ff-text-primary);
}

.ff-btn-secondary {
  background: var(--ff-secondary);
  color: var(--ff-text-primary);
}

.ff-btn-accent {
  background: var(--ff-accent);
  color: var(--ff-text-primary);
}

.ff-focus-ring:focus-visible, :focus-visible {
  outline: 2px solid var(--ff-primary);
  outline-offset: 2px;
  border-radius: 4px;
}

.ff-focus-ring:focus-visible {
  outline: 3px solid var(--ff-primary);
  outline-offset: 3px;
  box-shadow: 0 0 0 4px #ff7b0033;
}

button:focus-visible, .ff-btn-primary:focus-visible, .ff-btn-secondary:focus-visible, .ff-btn-accent:focus-visible {
  outline: 3px solid var(--ff-primary);
  outline-offset: 3px;
  box-shadow: 0 0 0 5px #ff7b004d;
}

a:focus-visible {
  outline: 2px solid var(--ff-secondary);
  outline-offset: 2px;
  text-decoration: underline;
}

input:focus-visible, textarea:focus-visible, select:focus-visible {
  outline: 2px solid var(--ff-primary);
  outline-offset: 0;
  border-color: var(--ff-primary);
  box-shadow: 0 0 0 3px #ff7b0033;
}

.ff-card-interactive:focus-visible {
  outline: 3px solid var(--ff-primary);
  outline-offset: 4px;
  box-shadow: var(--ff-shadow-lg), 0 0 0 6px #ff7b0033;
}

.ff-sr-only, .sr-only {
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

.ff-sr-only-focusable:focus, .sr-only-focusable:focus {
  width: auto;
  height: auto;
  padding: inherit;
  margin: inherit;
  clip: auto;
  white-space: normal;
  position: static;
  overflow: visible;
}

.ff-skip-link {
  background: var(--ff-primary);
  color: var(--ff-text-primary);
  z-index: 100;
  font-family: var(--ff-font-primary);
  font-weight: var(--ff-weight-semibold);
  border-radius: 0 0 4px;
  padding: 8px 16px;
  text-decoration: none;
  transition: top .2s;
  position: absolute;
  top: -40px;
  left: 0;
}

.ff-skip-link:focus {
  outline: 3px solid var(--ff-accent);
  outline-offset: 2px;
  top: 0;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--ff-font-primary);
  font-weight: var(--ff-weight-bold);
  line-height: var(--ff-leading-tight);
  margin-bottom: var(--ff-space-4);
}

ul[role="list"], ol[role="list"] {
  list-style: none;
}

table {
  border-collapse: collapse;
  width: 100%;
}

th {
  text-align: left;
  font-weight: var(--ff-weight-semibold);
  padding: var(--ff-space-3);
  background: var(--ff-surface);
  border-bottom: 2px solid var(--ff-primary);
}

td {
  padding: var(--ff-space-3);
  border-bottom: 1px solid #ffffff1a;
}

button, [role="button"], a[href] {
  min-width: 44px;
  min-height: 44px;
  padding: var(--ff-space-3) var(--ff-space-4);
  justify-content: center;
  align-items: center;
  gap: var(--ff-space-2);
  display: inline-flex;
}

button:disabled, [aria-disabled="true"] {
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

[aria-busy="true"] {
  cursor: wait;
}

.ff-required:after, [aria-required="true"]:after {
  content: " *";
  color: var(--ff-error-500);
  font-weight: var(--ff-weight-bold);
}

.ff-error-message, [role="alert"] {
  color: var(--ff-error-500);
  font-size: var(--ff-text-sm);
  margin-top: var(--ff-space-1);
  align-items: flex-start;
  gap: var(--ff-space-2);
  display: flex;
}

.ff-error-message:before {
  content: "⚠";
  flex-shrink: 0;
}

.ff-help-text, [aria-describedby] {
  font-size: var(--ff-text-sm);
  color: var(--ff-text-secondary);
  margin-top: var(--ff-space-1);
}

label {
  font-family: var(--ff-font-primary);
  font-weight: var(--ff-weight-semibold);
  font-size: var(--ff-text-sm);
  color: var(--ff-text-primary);
  margin-bottom: var(--ff-space-2);
  display: block;
}

[aria-live="polite"], [aria-live="assertive"] {
  width: 1px;
  height: 1px;
  position: absolute;
  left: -10000px;
  overflow: hidden;
}

[role="dialog"], [aria-modal="true"] {
  z-index: 1000;
  background: var(--ff-surface);
  border-radius: var(--ff-radius-lg);
  box-shadow: var(--ff-shadow-2xl);
  max-width: 90vw;
  max-height: 90vh;
  position: fixed;
  top: 50%;
  left: 50%;
  overflow-y: auto;
  transform: translate(-50%, -50%);
}

.ff-dialog-overlay, [role="dialog"]::backdrop {
  z-index: 999;
  background: #000c;
  position: fixed;
  inset: 0;
}

[role="tab"][aria-selected="true"] {
  border-bottom: 3px solid var(--ff-primary);
  font-weight: var(--ff-weight-semibold);
}

[role="tab"]:focus-visible {
  outline: 2px solid var(--ff-primary);
  outline-offset: -2px;
}

[role="menuitem"]:focus, [role="menuitemcheckbox"]:focus, [role="menuitemradio"]:focus {
  outline: 2px solid var(--ff-primary);
  outline-offset: -2px;
  background: #ff7b001a;
}

@media (prefers-reduced-motion: reduce) {
  *, :before, :after {
    scroll-behavior: auto !important;
    transition-duration: .01ms !important;
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
  }

  .ff-focus-ring:focus-visible, :focus-visible {
    transition: none !important;
  }
}

@media (prefers-contrast: high) {
  :root {
    --ff-text-primary: #fff;
    --ff-text-secondary: #fff;
    --ff-text-muted: #e0e0e0;
  }

  .ff-focus-ring:focus-visible, :focus-visible {
    outline-width: 4px;
    outline-color: var(--ff-primary);
  }

  button, .ff-btn-primary, .ff-btn-secondary, .ff-btn-accent {
    border: 2px solid var(--ff-text-primary);
  }
}

@media print {
  a[href]:after {
    content: " (" attr(href) ")";
    color: var(--ff-text-secondary);
    font-size: .8em;
  }

  [aria-hidden="true"], .ff-sr-only {
    display: none !important;
  }

  body {
    color: #000;
    background: #fff;
  }
}

@media (pointer: coarse) {
  button, [role="button"], a[href] {
    min-width: 48px;
    min-height: 48px;
    padding: var(--ff-space-4) var(--ff-space-6);
  }

  .ff-card-interactive {
    margin-bottom: var(--ff-space-4);
  }
}

.ff-status-success {
  background: var(--ff-success-500);
  position: relative;
}

.ff-status-success:before {
  content: "✓";
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 8px;
  transform: translateY(-50%);
}

.ff-status-error {
  background: var(--ff-error-500);
  position: relative;
}

.ff-status-error:before {
  content: "✗";
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 8px;
  transform: translateY(-50%);
}

.ff-status-warning {
  background: var(--ff-warning-500);
  position: relative;
}

.ff-status-warning:before {
  content: "⚠";
  font-weight: bold;
  position: absolute;
  top: 50%;
  left: 8px;
  transform: translateY(-50%);
}

:root {
  --font-size: 14px;
  --ff-primary: #ff7b00;
  --ff-secondary: #00b4d8;
  --ff-accent: #e91e63;
  --ff-bg-dark: #0f172a;
  --ff-surface: #1e293b;
  --ff-surface-light: #334155;
  --ff-text-primary: #fff;
  --ff-text-secondary: #cbd5e1;
  --ff-text-muted: #94a3b8;
  --ff-primary-50: #fff4e6;
  --ff-primary-100: #ffe8cc;
  --ff-primary-200: #ffd199;
  --ff-primary-300: #ffb866;
  --ff-primary-400: #ff9f33;
  --ff-primary-500: #ff7b00;
  --ff-primary-600: #e66a00;
  --ff-primary-700: #cc5a00;
  --ff-primary-800: #b34a00;
  --ff-primary-900: #993a00;
  --ff-secondary-50: #e6f7fb;
  --ff-secondary-100: #ccf0f7;
  --ff-secondary-200: #99e1ef;
  --ff-secondary-300: #66d2e7;
  --ff-secondary-400: #33c3df;
  --ff-secondary-500: #00b4d8;
  --ff-secondary-600: #00a2c2;
  --ff-secondary-700: #0090ac;
  --ff-secondary-800: #007e96;
  --ff-secondary-900: #006c80;
  --ff-accent-50: #fce8f0;
  --ff-accent-100: #f9d1e1;
  --ff-accent-200: #f3a3c3;
  --ff-accent-300: #ed75a5;
  --ff-accent-400: #e74787;
  --ff-accent-500: #e91e63;
  --ff-accent-600: #d11b59;
  --ff-accent-700: #b9184f;
  --ff-accent-800: #a11545;
  --ff-accent-900: #89123b;
  --ff-success-50: #ecfdf5;
  --ff-success-100: #d1fae5;
  --ff-success-200: #a7f3d0;
  --ff-success-300: #6ee7b7;
  --ff-success-400: #34d399;
  --ff-success-500: #10b981;
  --ff-success-600: #059669;
  --ff-success-700: #047857;
  --ff-success-800: #065f46;
  --ff-success-900: #064e3b;
  --ff-warning-50: #fffbeb;
  --ff-warning-100: #fef3c7;
  --ff-warning-200: #fde68a;
  --ff-warning-300: #fcd34d;
  --ff-warning-400: #fbbf24;
  --ff-warning-500: #f59e0b;
  --ff-warning-600: #d97706;
  --ff-warning-700: #b45309;
  --ff-warning-800: #92400e;
  --ff-warning-900: #78350f;
  --ff-error-50: #fef2f2;
  --ff-error-100: #fee2e2;
  --ff-error-200: #fecaca;
  --ff-error-300: #fca5a5;
  --ff-error-400: #f87171;
  --ff-error-500: #ef4444;
  --ff-error-600: #dc2626;
  --ff-error-700: #b91c1c;
  --ff-error-800: #991b1b;
  --ff-error-900: #7f1d1d;
  --ff-neutral-50: #f8fafc;
  --ff-neutral-100: #f1f5f9;
  --ff-neutral-200: #e2e8f0;
  --ff-neutral-300: #cbd5e1;
  --ff-neutral-400: #94a3b8;
  --ff-neutral-500: #64748b;
  --ff-neutral-600: #475569;
  --ff-neutral-700: #334155;
  --ff-neutral-800: #1e293b;
  --ff-neutral-900: #0f172a;
  --ff-gradient-primary: linear-gradient(135deg, var(--ff-primary-400) 0%, var(--ff-primary-600) 100%);
  --ff-gradient-secondary: linear-gradient(135deg, var(--ff-secondary-400) 0%, var(--ff-secondary-600) 100%);
  --ff-gradient-accent: linear-gradient(135deg, var(--ff-accent-400) 0%, var(--ff-accent-600) 100%);
  --ff-gradient-hero: linear-gradient(135deg, var(--ff-primary-500) 0%, var(--ff-secondary-500) 50%, var(--ff-accent-500) 100%);
  --ff-gradient-surface: linear-gradient(145deg, var(--ff-neutral-800) 0%, var(--ff-neutral-900) 100%);
  --ff-font-primary: "Sora", system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
  --ff-font-secondary: "Inter", system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
  --ff-font-mono: "JetBrains Mono", "SF Mono", Consolas, "Liberation Mono", Menlo, monospace;
  --ff-weight-thin: 100;
  --ff-weight-light: 300;
  --ff-weight-normal: 400;
  --ff-weight-medium: 500;
  --ff-weight-semibold: 600;
  --ff-weight-bold: 700;
  --ff-weight-extrabold: 800;
  --ff-weight-black: 900;
  --ff-text-xs: clamp(.75rem, .7rem + .25vw, .875rem);
  --ff-text-sm: clamp(.875rem, .8rem + .375vw, 1rem);
  --ff-text-base: clamp(1rem, .9rem + .5vw, 1.125rem);
  --ff-text-lg: clamp(1.125rem, 1rem + .625vw, 1.25rem);
  --ff-text-xl: clamp(1.25rem, 1.1rem + .75vw, 1.5rem);
  --ff-text-2xl: clamp(1.5rem, 1.3rem + 1vw, 1.875rem);
  --ff-text-3xl: clamp(1.875rem, 1.6rem + 1.375vw, 2.25rem);
  --ff-text-4xl: clamp(2.25rem, 1.9rem + 1.75vw, 3rem);
  --ff-text-5xl: clamp(3rem, 2.5rem + 2.5vw, 3.75rem);
  --ff-text-6xl: clamp(3.75rem, 3rem + 3.75vw, 4.5rem);
  --ff-leading-none: 1;
  --ff-leading-tight: 1.25;
  --ff-leading-snug: 1.375;
  --ff-leading-normal: 1.5;
  --ff-leading-relaxed: 1.625;
  --ff-leading-loose: 2;
  --ff-tracking-tighter: -.05em;
  --ff-tracking-tight: -.025em;
  --ff-tracking-normal: 0em;
  --ff-tracking-wide: .025em;
  --ff-tracking-wider: .05em;
  --ff-tracking-widest: .1em;
  --ff-space-unit: .25rem;
  --ff-space-0: 0;
  --ff-space-px: 1px;
  --ff-space-0_5: calc(var(--ff-space-unit) * .5);
  --ff-space-1: var(--ff-space-unit);
  --ff-space-1_5: calc(var(--ff-space-unit) * 1.5);
  --ff-space-2: calc(var(--ff-space-unit) * 2);
  --ff-space-2_5: calc(var(--ff-space-unit) * 2.5);
  --ff-space-3: calc(var(--ff-space-unit) * 3);
  --ff-space-3_5: calc(var(--ff-space-unit) * 3.5);
  --ff-space-4: calc(var(--ff-space-unit) * 4);
  --ff-space-5: calc(var(--ff-space-unit) * 5);
  --ff-space-6: calc(var(--ff-space-unit) * 6);
  --ff-space-7: calc(var(--ff-space-unit) * 7);
  --ff-space-8: calc(var(--ff-space-unit) * 8);
  --ff-space-9: calc(var(--ff-space-unit) * 9);
  --ff-space-10: calc(var(--ff-space-unit) * 10);
  --ff-space-11: calc(var(--ff-space-unit) * 11);
  --ff-space-12: calc(var(--ff-space-unit) * 12);
  --ff-space-14: calc(var(--ff-space-unit) * 14);
  --ff-space-16: calc(var(--ff-space-unit) * 16);
  --ff-space-20: calc(var(--ff-space-unit) * 20);
  --ff-space-24: calc(var(--ff-space-unit) * 24);
  --ff-space-28: calc(var(--ff-space-unit) * 28);
  --ff-space-32: calc(var(--ff-space-unit) * 32);
  --ff-space-36: calc(var(--ff-space-unit) * 36);
  --ff-space-40: calc(var(--ff-space-unit) * 40);
  --ff-space-44: calc(var(--ff-space-unit) * 44);
  --ff-space-48: calc(var(--ff-space-unit) * 48);
  --ff-space-52: calc(var(--ff-space-unit) * 52);
  --ff-space-56: calc(var(--ff-space-unit) * 56);
  --ff-space-60: calc(var(--ff-space-unit) * 60);
  --ff-space-64: calc(var(--ff-space-unit) * 64);
  --ff-space-72: calc(var(--ff-space-unit) * 72);
  --ff-space-80: calc(var(--ff-space-unit) * 80);
  --ff-space-96: calc(var(--ff-space-unit) * 96);
  --ff-space-component-xs: var(--ff-space-2);
  --ff-space-component-sm: var(--ff-space-3);
  --ff-space-component-md: var(--ff-space-4);
  --ff-space-component-lg: var(--ff-space-6);
  --ff-space-component-xl: var(--ff-space-8);
  --ff-space-layout-xs: var(--ff-space-4);
  --ff-space-layout-sm: var(--ff-space-6);
  --ff-space-layout-md: var(--ff-space-8);
  --ff-space-layout-lg: var(--ff-space-12);
  --ff-space-layout-xl: var(--ff-space-16);
  --ff-space-layout-2xl: var(--ff-space-24);
  --ff-space-layout-3xl: var(--ff-space-32);
  --ff-container-xs: 20rem;
  --ff-container-sm: 24rem;
  --ff-container-md: 28rem;
  --ff-container-lg: 32rem;
  --ff-container-xl: 36rem;
  --ff-container-2xl: 42rem;
  --ff-container-3xl: 48rem;
  --ff-container-4xl: 56rem;
  --ff-container-5xl: 64rem;
  --ff-container-6xl: 72rem;
  --ff-container-7xl: 80rem;
  --ff-container-full: 100%;
  --ff-animation-ease: cubic-bezier(.4, 0, .2, 1);
  --ff-animation-ease-in: cubic-bezier(.4, 0, 1, 1);
  --ff-animation-ease-out: cubic-bezier(0, 0, .2, 1);
  --ff-animation-ease-in-out: cubic-bezier(.4, 0, .2, 1);
  --ff-animation-ease-sharp: cubic-bezier(.4, 0, .6, 1);
  --ff-animation-ease-bounce: cubic-bezier(.68, -.55, .265, 1.55);
  --ff-animation-ease-elastic: cubic-bezier(.25, .46, .45, .94);
  --ff-animation-duration: .3s;
  --ff-animation-duration-fast: .15s;
  --ff-animation-duration-slow: .45s;
  --ff-animation-duration-slower: .6s;
  --ff-radius: 12px;
  --ff-radius-sm: 6px;
  --ff-radius-lg: 16px;
  --ff-radius-xl: 20px;
  --ff-radius-2xl: 24px;
  --ff-radius-full: 9999px;
  --ff-shadow: 0 4px 12px #00000026;
  --ff-shadow-sm: 0 1px 2px #0000000d;
  --ff-shadow-md: 0 4px 6px -1px #0000001a;
  --ff-shadow-lg: 0 8px 24px #00000040;
  --ff-shadow-xl: 0 20px 25px -5px #0000001a;
  --ff-shadow-2xl: 0 25px 50px -12px #00000040;
  --ff-glow: 0 0 20px #ff7b0080;
  --ff-glow-secondary: 0 0 20px #00b4d866;
  --ff-glow-accent: 0 0 20px #e91e6366;
  --ff-glow-success: 0 0 20px #10b98166;
  --ff-glow-warning: 0 0 20px #f59e0b66;
  --ff-glow-error: 0 0 20px #ef444466;
  --ff-success: var(--ff-success-500);
  --ff-warning: var(--ff-warning-500);
  --ff-error: var(--ff-error-500);
  --ff-info: var(--ff-secondary-500);
  --background: var(--ff-bg-dark);
  --foreground: var(--ff-text-primary);
  --card: var(--ff-surface);
  --card-foreground: var(--ff-text-primary);
  --popover: var(--ff-surface);
  --popover-foreground: var(--ff-text-primary);
  --primary: var(--ff-primary);
  --primary-foreground: #fff;
  --secondary: var(--ff-surface-light);
  --secondary-foreground: var(--ff-text-primary);
  --muted: var(--ff-surface);
  --muted-foreground: var(--ff-text-muted);
  --accent: var(--ff-accent);
  --accent-foreground: #fff;
  --destructive: var(--ff-error);
  --destructive-foreground: #fff;
  --border: #cbd5e11a;
  --input: transparent;
  --input-background: var(--ff-surface);
  --switch-background: var(--ff-surface-light);
  --font-weight-medium: var(--ff-weight-semibold);
  --font-weight-normal: var(--ff-weight-medium);
  --ring: var(--ff-primary);
  --chart-1: var(--ff-primary);
  --chart-2: var(--ff-secondary);
  --chart-3: var(--ff-accent);
  --chart-4: var(--ff-success);
  --chart-5: var(--ff-warning);
  --radius: var(--ff-radius);
  --sidebar: var(--ff-surface);
  --sidebar-foreground: var(--ff-text-primary);
  --sidebar-primary: var(--ff-primary);
  --sidebar-primary-foreground: #fff;
  --sidebar-accent: #ff7b001a;
  --sidebar-accent-foreground: var(--ff-text-primary);
  --sidebar-border: #cbd5e10d;
  --sidebar-ring: var(--ff-primary);
  --warning: var(--ff-warning);
  --warning-foreground: #000;
  --info: var(--ff-info);
  --info-foreground: #fff;
  --success: var(--ff-success);
  --success-foreground: #fff;
}

.dark {
  --background: var(--ff-bg-dark);
  --foreground: var(--ff-text-primary);
  --card: var(--ff-surface);
  --card-foreground: var(--ff-text-primary);
  --popover: var(--ff-surface);
  --popover-foreground: var(--ff-text-primary);
  --primary: var(--ff-primary);
  --primary-foreground: #fff;
  --secondary: var(--ff-surface-light);
  --secondary-foreground: var(--ff-text-primary);
  --muted: var(--ff-surface);
  --muted-foreground: var(--ff-text-muted);
  --accent: var(--ff-accent);
  --accent-foreground: #fff;
  --destructive: var(--ff-error);
  --destructive-foreground: #fff;
  --border: #cbd5e11a;
  --input: var(--ff-surface);
  --ring: var(--ff-primary);
  --font-weight-medium: var(--ff-weight-semibold);
  --font-weight-normal: var(--ff-weight-medium);
  --chart-1: var(--ff-primary);
  --chart-2: var(--ff-secondary);
  --chart-3: var(--ff-accent);
  --chart-4: var(--ff-success);
  --chart-5: var(--ff-warning);
  --sidebar: var(--ff-surface);
  --sidebar-foreground: var(--ff-text-primary);
  --sidebar-primary: var(--ff-primary);
  --sidebar-primary-foreground: #fff;
  --sidebar-accent: #ff7b001a;
  --sidebar-accent-foreground: var(--ff-text-primary);
  --sidebar-border: #cbd5e10d;
  --sidebar-ring: var(--ff-primary);
  --warning: var(--ff-warning);
  --warning-foreground: #000;
  --info: var(--ff-info);
  --info-foreground: #fff;
  --success: var(--ff-success);
  --success-foreground: #fff;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scalePop {
  0% {
    opacity: 0;
    transform: scale(.9);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-1rem);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-5deg)scale(.9);
  }

  to {
    opacity: 1;
    transform: rotate(0)scale(1);
  }
}

@keyframes pulseGlow {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 #ff7b00b3;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px #ff7b0000;
  }
}

@keyframes pulseGlowSecondary {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 #00b4d8b3;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px #00b4d800;
  }
}

@keyframes pulseGlowAccent {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 #e91e63b3;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px #e91e6300;
  }
}

@keyframes flipCard {
  0% {
    transform: rotateY(0);
  }

  50% {
    transform: rotateY(90deg);
  }

  100% {
    transform: rotateY(0);
  }
}

@keyframes confettiBurst {
  0% {
    opacity: 1;
    transform: scale(0)rotate(0);
  }

  50% {
    opacity: .8;
    transform: scale(1.2)rotate(180deg);
  }

  100% {
    opacity: 0;
    transform: scale(.8)rotate(360deg);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }

  100% {
    background-position: calc(200px + 100%) 0;
  }
}

@keyframes levelUp {
  0% {
    filter: hue-rotate();
    transform: scale(1);
  }

  25% {
    filter: hue-rotate(90deg);
    transform: scale(1.1);
  }

  50% {
    filter: hue-rotate(180deg);
    transform: scale(1.2);
  }

  75% {
    filter: hue-rotate(270deg);
    transform: scale(1.1);
  }

  100% {
    filter: hue-rotate(360deg);
    transform: scale(1);
  }
}

@keyframes breathe {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: .9;
    transform: scale(1.02);
  }
}

@keyframes bounce {
  0%, 100% {
    animation-timing-function: cubic-bezier(.8, 0, 1, 1);
    transform: translateY(-25%);
  }

  50% {
    animation-timing-function: cubic-bezier(0, 0, .2, 1);
    transform: none;
  }
}

@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }

  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-.25rem);
  }

  20%, 40%, 60%, 80% {
    transform: translateX(.25rem);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

.ff-fade-in-up {
  animation: fadeInUp var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-scale-pop {
  animation: scalePop var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-slide-in-left {
  animation: slideInLeft var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-slide-in-right {
  animation: slideInRight var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-slide-in-down {
  animation: slideInDown var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-scale-in {
  animation: scaleIn var(--ff-animation-duration) var(--ff-animation-ease-bounce) forwards;
}

.ff-rotate-in {
  animation: rotateIn var(--ff-animation-duration-slow) var(--ff-animation-ease-elastic) forwards;
}

.ff-pulse-glow {
  animation: 2s infinite pulseGlow;
}

.ff-pulse-glow-secondary {
  animation: 2s infinite pulseGlowSecondary;
}

.ff-pulse-glow-accent {
  animation: 2s infinite pulseGlowAccent;
}

.ff-flip-card {
  animation: flipCard var(--ff-animation-duration-slow) var(--ff-animation-ease) forwards;
}

.ff-confetti {
  animation: .6s ease-out forwards confettiBurst;
}

.ff-level-up {
  animation: 1s ease-in-out forwards levelUp;
}

.ff-breathe {
  animation: 3s ease-in-out infinite breathe;
}

.ff-bounce {
  animation: bounce 1s var(--ff-animation-ease-out);
}

.ff-shake {
  animation: shake .5s var(--ff-animation-ease-out);
}

.ff-pulse {
  animation: pulse 2s var(--ff-animation-ease-in-out) infinite;
}

.ff-page-transition {
  animation: fadeInUp var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-stagger-fade > * {
  opacity: 0;
  animation: fadeInUp var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-stagger-fade > :first-child {
  animation-delay: 0s;
}

.ff-stagger-fade > :nth-child(2) {
  animation-delay: .1s;
}

.ff-stagger-fade > :nth-child(3) {
  animation-delay: .2s;
}

.ff-stagger-fade > :nth-child(4) {
  animation-delay: .3s;
}

.ff-stagger-fade > :nth-child(5) {
  animation-delay: .4s;
}

.ff-stagger-fade > :nth-child(6) {
  animation-delay: .5s;
}

.ff-stagger-fade > :nth-child(7) {
  animation-delay: .6s;
}

.ff-stagger-fade > :nth-child(8) {
  animation-delay: .7s;
}

.ff-stagger-children > * {
  opacity: 0;
  animation: slideInUp var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-stagger-children > :first-child {
  animation-delay: 0s;
}

.ff-stagger-children > :nth-child(2) {
  animation-delay: .1s;
}

.ff-stagger-children > :nth-child(3) {
  animation-delay: .2s;
}

.ff-stagger-children > :nth-child(4) {
  animation-delay: .3s;
}

.ff-stagger-children > :nth-child(5) {
  animation-delay: .4s;
}

.ff-stagger-children > :nth-child(6) {
  animation-delay: .5s;
}

.ff-stagger-children > :nth-child(7) {
  animation-delay: .6s;
}

.ff-stagger-children > :nth-child(8) {
  animation-delay: .7s;
}

.ff-hover-glow:hover {
  box-shadow: var(--ff-glow);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
}

.ff-hover-glow-secondary:hover {
  box-shadow: var(--ff-glow-secondary);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
}

.ff-hover-glow-accent:hover {
  box-shadow: var(--ff-glow-accent);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
}

.ff-hover-scale:hover {
  transition: transform var(--ff-animation-duration) var(--ff-animation-ease);
  transform: scale(1.05);
}

.ff-hover-lift:hover {
  box-shadow: var(--ff-shadow-lg);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  transform: translateY(-4px);
}

.ff-progress-bar {
  background: linear-gradient(90deg, var(--ff-primary) 0%, var(--ff-secondary) 50%, var(--ff-accent) 100%);
  background-size: 200% 100%;
  animation: 2s infinite shimmer;
}

.ff-badge-glow {
  position: relative;
  overflow: hidden;
}

.ff-badge-glow:before {
  content: "";
  background: linear-gradient(45deg, var(--ff-primary), var(--ff-secondary), var(--ff-accent), var(--ff-primary));
  border-radius: inherit;
  z-index: -1;
  animation: 3s ease-in-out infinite pulseGlow;
  position: absolute;
  inset: -2px;
}

.ff-nav-item {
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  position: relative;
}

.ff-nav-item:before {
  content: "";
  background: var(--ff-primary);
  width: 3px;
  height: 0;
  transition: height var(--ff-animation-duration) var(--ff-animation-ease);
  border-radius: 0 2px 2px 0;
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

.ff-nav-item.active:before, .ff-nav-item:hover:before {
  height: 20px;
}

.ff-nav-item.active {
  background: var(--ff-surface-light);
  color: var(--ff-primary);
}

.ff-btn {
  padding: var(--ff-space-2) var(--ff-space-4);
  border-radius: var(--ff-radius);
  font-family: var(--ff-font-primary);
  font-weight: var(--ff-weight-semibold);
  font-size: var(--ff-text-sm);
  line-height: var(--ff-leading-normal);
  transition: all .2s var(--ff-animation-ease);
  cursor: pointer;
  -webkit-user-select: none;
  user-select: none;
  white-space: nowrap;
  border: none;
  outline: none;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  display: inline-flex;
  position: relative;
}

.ff-promotional-btn {
  min-height: 3rem;
  padding: var(--ff-space-3) var(--ff-space-6);
  border-radius: var(--ff-radius-lg);
  white-space: normal;
  text-align: center;
}

@media (width <= 640px) {
  .ff-promotional-btn {
    min-height: 2.75rem;
    padding: var(--ff-space-2) var(--ff-space-4);
    font-size: var(--ff-text-sm);
  }
}

.ff-btn-multi-line {
  white-space: normal;
  align-items: center;
  gap: var(--ff-space-1);
  padding: var(--ff-space-3) var(--ff-space-4);
  flex-direction: column;
  min-height: 3.5rem;
}

.ff-btn-multi-line .ff-btn-primary-text {
  font-size: var(--ff-text-base);
  font-weight: var(--ff-weight-bold);
  line-height: var(--ff-leading-tight);
}

.ff-btn-multi-line .ff-btn-secondary-text {
  font-size: var(--ff-text-xs);
  opacity: .9;
  line-height: var(--ff-leading-tight);
}

.ff-btn-responsive {
  white-space: normal;
  word-wrap: break-word;
  -webkit-hyphens: auto;
  hyphens: auto;
  max-width: 100%;
}

@media (width <= 768px) {
  .ff-btn-responsive {
    font-size: var(--ff-text-sm);
    padding: var(--ff-space-2_5) var(--ff-space-4);
    line-height: var(--ff-leading-snug);
  }
}

.ff-btn:focus-visible {
  outline: 2px solid var(--ff-primary-400);
  outline-offset: 2px;
}

.ff-btn:disabled {
  opacity: .5;
  cursor: not-allowed;
  pointer-events: none;
}

.ff-btn-primary {
  background: var(--ff-gradient-primary);
  color: #fff;
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  border: none;
}

.ff-btn-primary:hover {
  background: linear-gradient(135deg, #ff8f1f 0%, var(--ff-primary) 100%);
  box-shadow: var(--ff-glow);
  transform: translateY(-1px);
}

.ff-btn-secondary {
  background: var(--ff-gradient-secondary);
  color: #fff;
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  border: none;
}

.ff-btn-secondary:hover {
  background: linear-gradient(135deg, #1fc7ed 0%, var(--ff-secondary) 100%);
  box-shadow: var(--ff-glow-secondary);
  transform: translateY(-1px);
}

.ff-btn-accent {
  background: var(--ff-gradient-accent);
  color: #fff;
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  border: none;
}

.ff-btn-accent:hover {
  background: linear-gradient(135deg, #f06292 0%, var(--ff-accent) 100%);
  box-shadow: var(--ff-glow-accent);
  transform: translateY(-1px);
}

.ff-btn-outline {
  color: var(--ff-primary-400);
  border: 1px solid var(--ff-primary-400);
  box-shadow: var(--ff-shadow-sm);
  background: none;
}

.ff-btn-outline:hover {
  background: var(--ff-primary-500);
  color: var(--ff-neutral-50);
  border-color: var(--ff-primary-500);
  box-shadow: var(--ff-shadow-md);
  transform: translateY(-1px);
}

.ff-btn-ghost {
  color: var(--ff-neutral-300);
  background: none;
}

.ff-btn-ghost:hover {
  color: var(--ff-neutral-50);
  background: #ffffff0d;
}

.ff-btn-xs {
  padding: var(--ff-space-1) var(--ff-space-2);
  font-size: var(--ff-text-xs);
  border-radius: calc(var(--ff-radius) * .5);
}

.ff-btn-sm {
  padding: var(--ff-space-1_5) var(--ff-space-3);
  font-size: var(--ff-text-sm);
  border-radius: calc(var(--ff-radius) * .75);
}

.ff-btn-md {
  padding: var(--ff-space-2) var(--ff-space-4);
  font-size: var(--ff-text-sm);
}

.ff-btn-lg {
  padding: var(--ff-space-3) var(--ff-space-6);
  font-size: var(--ff-text-base);
  border-radius: calc(var(--ff-radius) * 1.25);
}

.ff-btn-xl {
  padding: var(--ff-space-4) var(--ff-space-8);
  font-size: var(--ff-text-lg);
  border-radius: calc(var(--ff-radius) * 1.5);
}

.ff-card {
  background: var(--ff-gradient-surface);
  border-radius: var(--ff-radius-lg);
  box-shadow: var(--ff-shadow);
  border: 1px solid #ffffff0d;
  position: relative;
  overflow: hidden;
}

.ff-card:before {
  content: "";
  background: linear-gradient(90deg, #0000 0%, #ff7b004d 50%, #0000 100%);
  height: 1px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.ff-card-interactive {
  cursor: pointer;
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  border: 1px solid #0000;
}

.ff-card-interactive:hover {
  box-shadow: var(--ff-shadow-lg);
  border-color: #ff7b0033;
  transform: translateY(-2px);
}

.ff-card-header {
  padding: var(--ff-space-6);
  border-bottom: 1px solid #ffffff0d;
}

.ff-card-content {
  padding: var(--ff-space-6);
}

.ff-card-footer {
  padding: var(--ff-space-6);
  background: #ffffff05;
  border-top: 1px solid #ffffff0d;
}

.ff-input {
  width: 100%;
  padding: var(--ff-space-3);
  border-radius: var(--ff-radius);
  color: var(--ff-neutral-50);
  font-family: var(--ff-font-secondary);
  font-size: var(--ff-text-sm);
  transition: all .2s var(--ff-animation-ease);
  background: #ffffff0d;
  border: 1px solid #ffffff1a;
  display: block;
}

.ff-input::placeholder {
  color: var(--ff-neutral-400);
}

.ff-input:focus {
  border-color: var(--ff-primary-400);
  box-shadow: 0 0 0 3px #ff7b001a, var(--ff-shadow-sm);
  background: #ffffff14;
  outline: none;
}

.ff-input:invalid {
  border-color: var(--ff-error-400);
  box-shadow: 0 0 0 3px #ef44441a;
}

.ff-badge {
  padding: var(--ff-space-1) var(--ff-space-2);
  border-radius: var(--ff-radius-sm);
  font-family: var(--ff-font-primary);
  font-size: var(--ff-text-xs);
  font-weight: var(--ff-weight-semibold);
  line-height: var(--ff-leading-none);
  white-space: nowrap;
  align-items: center;
  display: inline-flex;
}

.ff-badge-primary {
  color: var(--ff-primary-300);
  background: #ff7b001a;
  border: 1px solid #ff7b0033;
}

.ff-badge-secondary {
  color: var(--ff-secondary-300);
  background: #00b4d81a;
  border: 1px solid #00b4d833;
}

.ff-badge-success {
  color: var(--ff-success-300);
  background: #10b9811a;
  border: 1px solid #10b98133;
}

.ff-badge-warning {
  color: var(--ff-warning-300);
  background: #f59e0b1a;
  border: 1px solid #f59e0b33;
}

.ff-badge-error {
  color: var(--ff-error-300);
  background: #ef44441a;
  border: 1px solid #ef444433;
}

.ff-text-display {
  font-family: var(--ff-font-primary);
  font-size: var(--ff-text-6xl);
  font-weight: var(--ff-weight-black);
  line-height: var(--ff-leading-none);
  letter-spacing: var(--ff-tracking-tight);
  background: var(--ff-gradient-hero);
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.ff-text-headline {
  font-family: var(--ff-font-primary);
  font-size: var(--ff-text-4xl);
  font-weight: var(--ff-weight-bold);
  line-height: var(--ff-leading-tight);
  letter-spacing: var(--ff-tracking-tight);
  color: var(--ff-neutral-50);
}

.ff-text-title {
  font-family: var(--ff-font-primary);
  font-size: var(--ff-text-2xl);
  font-weight: var(--ff-weight-semibold);
  line-height: var(--ff-leading-snug);
  color: var(--ff-neutral-100);
}

.ff-text-body {
  font-family: var(--ff-font-secondary);
  font-size: var(--ff-text-base);
  font-weight: var(--ff-weight-normal);
  line-height: var(--ff-leading-relaxed);
  color: var(--ff-neutral-300);
}

.ff-text-caption {
  font-family: var(--ff-font-secondary);
  font-size: var(--ff-text-sm);
  font-weight: var(--ff-weight-medium);
  line-height: var(--ff-leading-normal);
  color: var(--ff-neutral-400);
}

.ff-text-code {
  font-family: var(--ff-font-mono);
  font-size: var(--ff-text-sm);
  font-weight: var(--ff-weight-normal);
  line-height: var(--ff-leading-snug);
  color: var(--ff-neutral-200);
  background: var(--ff-neutral-800);
  border-radius: .25rem;
  padding: .125rem .375rem;
}

.ff-text-xs {
  font-size: var(--ff-text-xs);
  line-height: var(--ff-leading-normal);
}

.ff-text-sm {
  font-size: var(--ff-text-sm);
  line-height: var(--ff-leading-normal);
}

.ff-text-base {
  font-size: var(--ff-text-base);
  line-height: var(--ff-leading-relaxed);
}

.ff-text-lg {
  font-size: var(--ff-text-lg);
  line-height: var(--ff-leading-relaxed);
}

.ff-text-xl {
  font-size: var(--ff-text-xl);
  line-height: var(--ff-leading-relaxed);
}

.ff-text-2xl {
  font-size: var(--ff-text-2xl);
  line-height: var(--ff-leading-snug);
}

.ff-text-3xl {
  font-size: var(--ff-text-3xl);
  line-height: var(--ff-leading-snug);
}

.ff-breadcrumb {
  align-items: center;
  gap: var(--ff-space-component-sm);
  color: var(--ff-text-muted);
  font-size: var(--ff-text-sm);
  margin-bottom: var(--ff-space-layout-md);
  display: flex;
}

.ff-breadcrumb-item {
  align-items: center;
  gap: var(--ff-space-component-sm);
  transition: color var(--ff-animation-duration) var(--ff-animation-ease);
  display: flex;
}

.ff-breadcrumb-item:hover {
  color: var(--ff-primary);
}

.ff-breadcrumb-separator {
  color: var(--ff-text-muted);
  font-size: var(--ff-text-xs);
}

.ff-footer {
  background: var(--ff-bg-dark);
  border-top: 1px solid #cbd5e114;
}

.ff-footer-link {
  color: var(--ff-text-muted);
  transition: color var(--ff-animation-duration) var(--ff-animation-ease);
  font-size: var(--ff-text-sm);
  align-items: center;
  gap: .25rem;
  padding: .25rem 0;
  text-decoration: none;
  display: flex;
}

.ff-footer-link:hover {
  color: var(--ff-primary);
}

.ff-footer-section {
  margin-bottom: var(--ff-space-layout-md);
}

.ff-footer-section h3 {
  font-size: var(--ff-text-sm);
  font-weight: var(--ff-weight-semibold);
  color: var(--ff-text-primary);
  margin-bottom: var(--ff-space-component-sm);
  font-family: var(--ff-font-primary);
}

.ff-footer-section h4 {
  font-size: var(--ff-text-xs);
  font-weight: var(--ff-weight-semibold);
  color: var(--ff-text-secondary);
  margin-bottom: var(--ff-space-component-xs);
  font-family: var(--ff-font-primary);
}

.ff-social-link {
  border-radius: var(--ff-radius-sm);
  width: 2rem;
  height: 2rem;
  color: var(--ff-text-muted);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  background: #ffffff08;
  border: 1px solid #ffffff14;
  justify-content: center;
  align-items: center;
  display: inline-flex;
}

.ff-social-link:hover {
  color: var(--ff-primary);
  background: #ff7b001a;
  border-color: #ff7b0033;
  transform: translateY(-1px);
}

.ff-newsletter-input {
  color: var(--ff-text-primary);
  border-radius: var(--ff-radius-sm);
  font-size: var(--ff-text-sm);
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  background: #ffffff0d;
  border: 1px solid #fff3;
  padding: .75rem 1rem;
}

.ff-newsletter-input:focus {
  border-color: var(--ff-primary);
  outline: none;
  box-shadow: 0 0 0 3px #ff7b001a;
}

.ff-newsletter-input::placeholder {
  color: var(--ff-text-muted);
}

.ff-trust-badge {
  font-size: var(--ff-text-sm);
  color: var(--ff-text-muted);
  align-items: center;
  gap: .5rem;
  margin: .5rem 0;
  display: flex;
}

.ff-trust-badge-icon {
  width: 1rem;
  height: 1rem;
  color: var(--ff-success);
}

.ff-glass {
  -webkit-backdrop-filter: blur(12px);
  backdrop-filter: blur(12px);
  background: #1e293bcc;
  border: 1px solid #cbd5e11a;
}

.ff-focus-ring:focus {
  outline: 2px solid var(--ff-primary);
  outline-offset: 2px;
}

.ff-text-gradient {
  background: var(--ff-gradient-hero);
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.ff-interactive {
  transition: all var(--ff-animation-duration) var(--ff-animation-ease);
  cursor: pointer;
}

.ff-interactive:hover {
  transform: translateY(-1px);
}

.ff-interactive:active {
  transform: translateY(0);
}

.ff-status-dot {
  width: .5rem;
  height: .5rem;
  margin-right: var(--ff-space-component-xs);
  border-radius: 50%;
  display: inline-block;
}

.ff-status-online {
  background-color: var(--ff-success-500);
}

.ff-status-offline {
  background-color: var(--ff-text-muted);
}

.ff-status-busy {
  background-color: var(--ff-warning-500);
}

.ff-status-error {
  background-color: var(--ff-error-500);
}

.line-clamp-1 {
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.line-clamp-2 {
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.line-clamp-3 {
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  display: -webkit-box;
  overflow: hidden;
}

.sr-only {
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  position: absolute;
  overflow: hidden;
}

.ff-skip-link {
  background: var(--ff-primary);
  color: #fff;
  z-index: 9999;
  border-radius: 4px;
  padding: 8px;
  text-decoration: none;
  transition: top .3s;
  position: absolute;
  top: -40px;
  left: 6px;
}

.ff-skip-link:focus {
  top: 6px;
}

.error-boundary {
  border: 1px solid var(--ff-error);
  border-radius: var(--ff-radius);
  padding: var(--ff-space-layout-md);
  background: #ef44440d;
}

.component-error {
  color: var(--ff-error);
  border-radius: var(--ff-radius-sm);
  padding: var(--ff-space-layout-md);
  background: #ef44441a;
  border: 1px solid #ef444433;
}

html {
  font-size: var(--font-size);
  background: var(--ff-bg-dark);
  scroll-behavior: smooth;
}

::-webkit-scrollbar {
  width: 6px;
}

::-webkit-scrollbar-track {
  background: var(--ff-surface);
}

::-webkit-scrollbar-thumb {
  background: var(--ff-primary);
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--ff-primary-400);
}

.scrollbar-thin::-webkit-scrollbar {
  width: 4px;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background: var(--ff-primary);
  border-radius: 2px;
}

.loading-state {
  opacity: .7;
  pointer-events: none;
  transition: opacity var(--ff-animation-duration) var(--ff-animation-ease);
}

.loading-complete {
  opacity: 1;
  pointer-events: auto;
}

.component-mounted {
  animation: fadeInUp var(--ff-animation-duration) var(--ff-animation-ease) forwards;
}

.ff-container-fluid {
  width: 100%;
  max-width: none;
  padding-left: var(--ff-space-layout-md);
  padding-right: var(--ff-space-layout-md);
}

@media (width >= 640px) {
  .ff-container-fluid {
    padding-left: var(--ff-space-layout-lg);
    padding-right: var(--ff-space-layout-lg);
  }
}

@media (width >= 1024px) {
  .ff-container-fluid {
    padding-left: var(--ff-space-layout-xl);
    padding-right: var(--ff-space-layout-xl);
  }
}

.ff-container-tight {
  max-width: var(--ff-container-5xl);
  padding-left: var(--ff-space-layout-md);
  padding-right: var(--ff-space-layout-md);
  margin-left: auto;
  margin-right: auto;
}

.ff-stack-tight > * + * {
  margin-top: var(--ff-space-component-sm);
}

.ff-stack-normal > * + * {
  margin-top: var(--ff-space-component-md);
}

.ff-stack-loose > * + * {
  margin-top: var(--ff-space-component-lg);
}

.ff-content-dense {
  line-height: var(--ff-leading-snug);
}

.ff-content-dense h1, .ff-content-dense h2, .ff-content-dense h3, .ff-content-dense h4, .ff-content-dense h5, .ff-content-dense h6 {
  margin-bottom: var(--ff-space-component-sm);
  line-height: var(--ff-leading-tight);
}

.ff-content-dense p, .ff-content-dense ul, .ff-content-dense ol {
  margin-bottom: var(--ff-space-component-sm);
}

.ff-content-dense li {
  margin-bottom: var(--ff-space-component-xs);
}

.ff-grid-auto-fit {
  gap: var(--ff-space-layout-md);
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  display: grid;
}

.ff-grid-auto-fill {
  gap: var(--ff-space-component-sm);
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  display: grid;
}

@media (width <= 768px) {
  :root {
    --font-size: 16px;
  }

  h1 {
    font-size: var(--ff-text-3xl) !important;
  }

  h2 {
    font-size: var(--ff-text-2xl) !important;
  }

  h3 {
    font-size: var(--ff-text-xl) !important;
  }
}

@media (prefers-reduced-motion: reduce) {
  *, :before, :after {
    scroll-behavior: auto !important;
    transition-duration: .01ms !important;
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
  }

  .ff-text-gradient {
    background: var(--ff-primary) !important;
    -webkit-background-clip: unset !important;
    background-clip: unset !important;
    -webkit-text-fill-color: unset !important;
    color: var(--ff-primary) !important;
  }

  .ff-btn-primary, .ff-btn-secondary, .ff-btn-accent {
    background: var(--ff-primary) !important;
    box-shadow: none !important;
  }

  .ff-hover-glow:hover, .ff-hover-glow-secondary:hover, .ff-hover-glow-accent:hover, .ff-hover-scale:hover, .ff-hover-lift:hover {
    box-shadow: none !important;
    transform: none !important;
  }

  .ff-stagger-fade > *, .ff-stagger-children > * {
    opacity: 1 !important;
    animation: none !important;
  }

  .ff-fade-in-up, .ff-scale-pop, .ff-slide-in-left, .ff-slide-in-right, .ff-slide-in-down, .ff-scale-in, .ff-rotate-in, .ff-pulse-glow, .ff-pulse-glow-secondary, .ff-pulse-glow-accent, .ff-flip-card, .ff-confetti, .ff-level-up, .ff-breathe, .ff-bounce, .ff-shake, .ff-pulse, .ff-page-transition {
    opacity: 1 !important;
    animation: none !important;
    transform: none !important;
  }

  h1 {
    background: none !important;
    -webkit-background-clip: unset !important;
    background-clip: unset !important;
    -webkit-text-fill-color: unset !important;
    color: var(--ff-primary) !important;
  }
}

@media (max-device-memory: 1), (max-device-memory: 2) {
  *, :before, :after {
    scroll-behavior: auto !important;
    transition-duration: .01ms !important;
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
  }

  .ff-text-gradient {
    background: var(--ff-primary) !important;
    -webkit-background-clip: unset !important;
    background-clip: unset !important;
    -webkit-text-fill-color: unset !important;
    color: var(--ff-primary) !important;
  }

  .ff-btn-primary, .ff-btn-secondary, .ff-btn-accent {
    background: var(--ff-primary) !important;
    box-shadow: none !important;
  }

  .ff-hover-glow:hover, .ff-hover-glow-secondary:hover, .ff-hover-glow-accent:hover, .ff-hover-scale:hover, .ff-hover-lift:hover {
    box-shadow: none !important;
    transform: none !important;
  }

  .ff-stagger-fade > *, .ff-stagger-children > * {
    opacity: 1 !important;
    animation: none !important;
  }

  .ff-fade-in-up, .ff-scale-pop, .ff-slide-in-left, .ff-slide-in-right, .ff-slide-in-down, .ff-scale-in, .ff-rotate-in, .ff-pulse-glow, .ff-pulse-glow-secondary, .ff-pulse-glow-accent, .ff-flip-card, .ff-confetti, .ff-level-up, .ff-breathe, .ff-bounce, .ff-shake, .ff-pulse, .ff-page-transition {
    opacity: 1 !important;
    animation: none !important;
    transform: none !important;
  }

  h1 {
    background: none !important;
    -webkit-background-clip: unset !important;
    background-clip: unset !important;
    -webkit-text-fill-color: unset !important;
    color: var(--ff-primary) !important;
  }
}

@layer components {
  .ff-repository-grid {
    gap: var(--ff-space-4);
    grid-template-columns: 1fr;
    display: grid;
  }

  @media (width >= 640px) {
    .ff-repository-grid {
      gap: var(--ff-space-6);
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (width >= 1280px) {
    .ff-repository-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .ff-stats-grid {
    gap: var(--ff-space-3);
    grid-template-columns: repeat(2, 1fr);
    display: grid;
  }

  @media (width >= 1024px) {
    .ff-stats-grid {
      gap: var(--ff-space-4);
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .ff-repository-card {
    gap: var(--ff-space-4);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 640px) {
    .ff-repository-card {
      flex-direction: row;
      align-items: flex-start;
    }
  }

  .ff-service-actions {
    gap: var(--ff-space-2);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 640px) {
    .ff-service-actions {
      flex-direction: row;
      align-items: center;
    }
  }

  .ff-truncate-mobile {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  @media (width >= 640px) {
    .ff-truncate-mobile {
      text-overflow: unset;
      white-space: normal;
      overflow: visible;
    }
  }

  .ff-touch-target {
    min-width: 44px;
    min-height: 44px;
    padding: var(--ff-space-2);
    justify-content: center;
    align-items: center;
    display: flex;
  }

  .ff-repository-dialog {
    width: 95vw;
    max-width: 32rem;
    max-height: 90vh;
    overflow-y: auto;
  }

  @media (width >= 768px) {
    .ff-repository-dialog {
      width: auto;
      max-width: 42rem;
    }
  }

  .ff-repository-metrics {
    gap: var(--ff-space-3);
    grid-template-columns: repeat(2, 1fr);
    display: grid;
  }

  @media (width >= 768px) {
    .ff-repository-metrics {
      gap: var(--ff-space-4);
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .ff-service-status {
    align-items: center;
    gap: var(--ff-space-1);
    flex-wrap: wrap;
    display: flex;
  }

  @media (width <= 640px) {
    .ff-service-status .ff-status-text {
      display: none;
    }
  }

  .ff-repository-actions {
    gap: var(--ff-space-2);
    flex-wrap: wrap;
    display: flex;
  }

  @media (width <= 640px) {
    .ff-repository-actions {
      flex-direction: column;
    }

    .ff-repository-actions > * {
      width: 100%;
    }
  }

  .ff-debug-session-card {
    gap: var(--ff-space-4);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 1024px) {
    .ff-debug-session-card {
      flex-direction: row;
      justify-content: space-between;
      align-items: flex-start;
    }
  }

  .ff-deployment-info {
    gap: var(--ff-space-3);
    grid-template-columns: 1fr;
    display: grid;
  }

  @media (width >= 640px) {
    .ff-deployment-info {
      gap: var(--ff-space-4);
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (width >= 1024px) {
    .ff-deployment-info {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  .ff-github-repository {
    gap: var(--ff-space-4);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 768px) {
    .ff-github-repository {
      flex-direction: row;
      align-items: flex-start;
    }
  }

  .ff-repository-form {
    gap: var(--ff-space-4);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 640px) {
    .ff-repository-form .ff-form-row {
      gap: var(--ff-space-4);
      display: flex;
    }

    .ff-repository-form .ff-form-row > * {
      flex: 1;
    }
  }

  .ff-service-card-icon {
    display: none;
  }

  @media (width >= 640px) {
    .ff-service-card-icon {
      display: block;
    }
  }

  .ff-repository-connection-status {
    gap: var(--ff-space-2);
    flex-direction: column;
    display: flex;
  }

  @media (width >= 768px) {
    .ff-repository-connection-status {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }
  }
}

@media (width <= 768px) {
  button, [role="button"], .ff-btn {
    min-height: 44px;
    padding: var(--ff-space-3) var(--ff-space-4);
  }

  input, select, textarea {
    min-height: 44px;
    font-size: 16px;
  }

  .ff-repository-service-hub, .ff-card {
    padding: var(--ff-space-4);
  }

  .ff-repository-tabs [role="tablist"] {
    grid-template-columns: repeat(2, 1fr);
  }

  .ff-repository-tabs [role="tab"] {
    padding: var(--ff-space-3) var(--ff-space-2);
    font-size: var(--ff-text-xs);
  }

  .ff-service-grid {
    gap: var(--ff-space-4);
    grid-template-columns: 1fr;
  }

  .ff-repository-list .ff-card {
    padding: var(--ff-space-4);
  }

  .ff-repository-list .ff-repository-header {
    align-items: flex-start;
    gap: var(--ff-space-2);
    flex-direction: column;
  }

  .ff-repository-list .ff-repository-actions {
    flex-direction: column;
    width: 100%;
  }

  .ff-debug-sessions .ff-card {
    padding: var(--ff-space-4);
  }

  .ff-debug-sessions .ff-session-header {
    align-items: flex-start;
    gap: var(--ff-space-2);
    flex-direction: column;
  }

  .ff-connection-dialog {
    margin: var(--ff-space-4);
    max-height: calc(100vh - var(--ff-space-8));
  }

  .ff-connection-dialog .ff-form-actions {
    gap: var(--ff-space-2);
    flex-direction: column-reverse;
  }

  .ff-connection-dialog .ff-form-actions > * {
    width: 100%;
  }
}

@media (width >= 768px) and (width <= 1024px) {
  .ff-repository-grid, .ff-service-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  .ff-stats-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (width >= 1280px) {
  .ff-repository-service-hub {
    padding: var(--ff-space-8);
  }

  .ff-repository-grid, .ff-service-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (-webkit-device-pixel-ratio >= 2), (resolution >= 192dpi) {
  .ff-repository-icons {
    image-rendering: -webkit-optimize-contrast;
  }
}

@media (prefers-color-scheme: dark) {
  .ff-repository-card {
    border-color: #ffffff1a;
  }

  .ff-service-connection-form {
    background: #ffffff05;
  }

  .ff-debug-session-log {
    background: #0000004d;
  }
}

@media print {
  .ff-repository-service-hub {
    color: #000 !important;
    background: #fff !important;
  }

  .ff-repository-actions, .ff-service-actions, .ff-debug-actions {
    display: none !important;
  }

  .ff-card {
    break-inside: avoid;
    border: 1px solid #ccc !important;
  }
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

@keyframes accordion-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height));
  }

  to {
    height: 0;
  }
}
