name: ‚ö° Performance & Monitoring

on:
  push:
    branches: [ main ]
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # ===== PERFORMANCE TESTING =====
  performance:
    name: ‚ö° Performance Tests
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì• Install Dependencies
        run: npm ci

      - name: üèóÔ∏è Build Production
        run: npm run build:prod

      - name: ‚ö° Performance Test
        run: npm run performance:test

      - name: üìä Bundle Size Analysis
        run: |
          echo "üì¶ Bundle Size Report:"
          du -sh dist/* | sort -hr
          echo ""
          echo "üìä Detailed Analysis:"
          ls -lah dist/

  # ===== LIGHTHOUSE CI =====
  lighthouse:
    name: üîç Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì• Install Dependencies
        run: npm ci

      - name: üèóÔ∏è Build Production
        run: npm run build:prod

      - name: üöÄ Start Preview Server
        run: |
          npm run preview &
          sleep 10

      - name: üîç Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # ===== SECURITY MONITORING =====
  security-monitor:
    name: üîí Security Monitoring
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: üì• Install Dependencies
        run: npm ci

      - name: üîí Security Scan
        run: |
          npm audit --audit-level moderate
          npm run security:scan

      - name: üîç Dependency Check
        uses: actions/dependency-review-action@v3
        if: github.event_name == 'pull_request'

  # ===== UPTIME MONITORING =====
  uptime-check:
    name: üåê Uptime Check
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: üåê Check Production Site
        run: |
          echo "üåê Checking FlashFusion production site..."
          
          # Check main site
          if curl -f -s https://flashfusion.ai > /dev/null; then
            echo "‚úÖ Main site is up"
          else
            echo "‚ùå Main site is down"
            exit 1
          fi
          
          # Check API health
          if curl -f -s https://flashfusion.ai/api/health > /dev/null; then
            echo "‚úÖ API is healthy"
          else
            echo "‚ùå API is down"
            exit 1
          fi
          
          echo "üéâ All systems operational!"

      - name: üìä Performance Check
        run: |
          echo "‚ö° Checking page load times..."
          
          # Simple performance check
          response_time=$(curl -o /dev/null -s -w '%{time_total}\n' https://flashfusion.ai)
          echo "üìä Response time: ${response_time}s"
          
          # Alert if response time > 3 seconds
          if (( $(echo "$response_time > 3" | bc -l) )); then
            echo "‚ö†Ô∏è Site is responding slowly (${response_time}s)"
          else
            echo "‚úÖ Site performance is good"
          fi